

# Profile Name (<class 'str'>); 
profile_name = 

# Log File (<class 'str'>); 
log = %LocalAppData%\feedex\feedex.log

# Path to DB (<class 'str'>); nn;
db_path = %LocalAppData%\feedex\feedex.db

# Language (<class 'str'>); 
lang = en

# WWW Browser (<class 'str'>); 
browser = START %u

# Def. User Agent (<class 'str'>); 
user_agent = UniversalFeedParser/5.0.1 +http://feedparser.org/

# Fallback User Agent (<class 'str'>); 
fallback_user_agent = 

# DB Timeout (<class 'int'>); ('gt', 0);
timeout = 120

# Fetching Oper. Timeout (<class 'int'>); ('gt', 0);
fetch_timeout = 20

# Default News Check Interval (<class 'int'>); ('gt', 0);
default_interval = 60

# Feed Error Limit (<class 'int'>); ('ge', 0);
error_threshold = 30

# Max Items per Transaction (<class 'int'>); ('gt', 0);
max_items_per_transaction = 2000

# Use Keyword Learning (<class 'bool'>); 
use_keyword_learning = True

# Recomm. Algorithm (<class 'int'>); ('in', (1, 2, 3));
recom_algo = 1

# Recomm. Term Limit (<class 'int'>); ('gt', 0);
recom_limit = 2000

# No Search History (<class 'bool'>); 
no_history = False

# Default New Note Weight (<class 'int'>); ('ge', 0);
default_entry_weight = 2

# Default New Rule Weight (<class 'int'>); ('ge', 0);
default_rule_weight = 20

# Default Limit for Simil. Query (<class 'int'>); ('ge', 0);
default_similarity_limit = 50

# Default Query Depth (<class 'int'>); ('gt', 0);
default_depth = 10

# Default Page Length (<class 'int'>); ('gt', 0);
default_page_len = 3000

# Max Context Length (<class 'int'>); ('gt', 0);
max_context_length = 500

# Follow Link Redirects? (<class 'bool'>); 
do_redirects = True

# Save Perm. Link Redirects? (<class 'bool'>); 
save_perm_redirects = False

# Mark unhealthy Feeds as deleted? (<class 'bool'>); 
mark_deleted = True

# Ignore MODIFIED and ETag? (<class 'bool'>); 
ignore_modified = False

# Notify on Fetched News? (<class 'bool'>); 
gui_desktop_notify = True

# Fetch periodicallly in bckgr.? (<class 'bool'>); 
gui_fetch_periodically = False

# Grouping for Notif. (<class 'str'>); ('in', ('category', 'feed', 'flag', 'number'));
gui_notify_group = flag

# Depth for Notif. (<class 'int'>); ('gt', 0);
gui_notify_depth = 10

# New Item Color (<class 'str'>); 
gui_new_color = #0f0fdadacaca

# Deleted Item Color (<class 'str'>); 
gui_deleted_color = #bababdbdb6b6

# Hilight Color (<class 'str'>); 
gui_hilight_color = #00000000ffff

# Default Flag Color (<class 'str'>); 
gui_default_flag_color = #cece5c5c0000

# Window Layout (<class 'int'>); ('in', (0, 1, 2));
gui_layout = 0

# Tab Orientation (<class 'int'>); ('in', (0, 1));
gui_orientation = 0

# Excluded Window Name Strings (<class 'str'>); 
window_name_exclude = Firefox,firefox,chrome,Chrome,Mozilla,mozilla,Thunderbird,thunderbird

# Image Viewer (<class 'str'>); 
image_viewer = START %u

# Search Engine (<class 'str'>); 
search_engine = https://duckduckgo.com/?t=ffab&q=%Q&ia=web

# Clear Cache Interval (<class 'int'>); ('ge', 0);
gui_clear_cache = 365

# Add Entry Hotkey (hotkey); 
gui_key_new_entry = n

# Add Rule Hotkey (hotkey); 
gui_key_new_rule = r

# Add Item Hotkey (hotkey); 
gui_key_add = a

# Edit Item Hotkey (hotkey); 
gui_key_edit = e

# Search Hotkey (hotkey); 
gui_key_search = s

# CLI Normal Color (term_col); 
normal_color = DEFAULT

# CLI Bold Color (term_col); 
bold_color = WHITE_BOLD

# CLI Emphasis Color (term_col); 
emph_color = YELLOW_BOLD

# CLI Deleted Color (term_col); 
deleted_color = LIGHT_RED

# CLI Snippet Color (term_col); 
snipp_hilight_color = CYAN_BOLD

# Begin Bold Markup (<class 'str'>); 
bold_markup_beg = <b>

# End Bold Markup (<class 'str'>); 
bold_markup_end = <b>

# CLI Read Marker (<class 'str'>); 
read_marker = =>

# CLI Note Marker (<class 'str'>); 
note_marker = (*)

# Allow Desktop Inter-Process Comm.? (<class 'bool'>); 
allow_pipe = True