# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-05-27 17:28+CEST\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: ENCODING\n"
"Generated-By: pygettext.py 1.5\n"


#: feeder.py:22 feedex_ling_processor.py:32
msgid "Top_parent should be an instance of FeedexMainDataContainer class!"
msgstr ""

#: feeder.py:40 feeder.py:41
msgid "No database given!"
msgstr ""

#: feeder.py:159
msgid "Icon folder %a created..."
msgstr ""

#: feeder.py:161
msgid "Error creating icon folder %a"
msgstr ""

#: feeder.py:167
msgid "Cache folder %a created..."
msgstr ""

#: feeder.py:169
msgid "Error creating cache folder %a"
msgstr ""

#: feeder.py:181
msgid "SQLite Database not found. Creating new one at %a"
msgstr ""

#: feeder.py:187
msgid "Folder %a created..."
msgstr ""

#: feeder.py:189
msgid "Error creating DB folder %a"
msgstr ""

#: feeder.py:197
msgid "DB connection error: %a"
msgstr ""

#: feeder.py:228
msgid "Error writing DDL scripts to database! %a"
msgstr ""

#: feeder.py:232
msgid "Database structure created"
msgstr ""

#: feeder.py:241
msgid "Error writing defaults to database: %a"
msgstr ""

#: feeder.py:251
msgid "Error getting version from DB: %a"
msgstr ""

#: feeder.py:256
msgid "Application version incompatibile with %a Database! Aborting"
msgstr ""

#: feeder.py:288
msgid "Index error!"
msgstr ""

#: feeder.py:319
msgid "Connection %a reset failed!"
msgstr ""

#: feeder.py:388
msgid "Database locked"
msgstr ""

#: feeder.py:401
msgid "Database unlocked"
msgstr ""

#: feeder.py:468
msgid "Database busy"
msgstr ""

#: feeder.py:475
msgid "Datbase busy"
msgstr ""

#: feeder.py:506 feeder.py:507
msgid "Local lock timeout reached"
msgstr ""

#: feeder.py:846
msgid "Error parsing JSON: %a"
msgstr ""

#: feeder.py:851
msgid "Invalid input: must be a list of dicts!"
msgstr ""

#: feeder.py:864
msgid "Input entry no. %a is not a dictionary!"
msgstr ""

#: feeder.py:886
msgid "Added %a new entries"
msgstr ""

#: feeder.py:929
msgid "Database locked for fetching!"
msgstr ""

#: feeder.py:932
msgid "Database already locked for fetching!"
msgstr ""

#: feeder.py:942 feeder.py:943
msgid "Error while unlocking for fetching: %a"
msgstr ""

#: feeder.py:946
msgid "Database unlocked for fetching!"
msgstr ""

#: feeder.py:962
msgid "Someone else is currently fetching to the database?"
msgstr ""

#: feeder.py:1006
msgid "Feed %a ignored due to previous errors"
msgstr ""

#: feeder.py:1017
msgid "Processing %a ..."
msgstr ""

#: feeder.py:1038
msgid "Channel handled locally... Ignoring..."
msgstr ""

#: feeder.py:1042
msgid "Handler %a not recognized!"
msgstr ""

#: feeder.py:1047
msgid "Using custom User Agent: %a"
msgstr ""

#: feeder.py:1081
msgid "Error while linguistic processing %a!"
msgstr ""

#: feeder.py:1088 feeder.py:1194
msgid "Saving new items ..."
msgstr ""

#: feeder.py:1094 feeder.py:1198
msgid "Indexing new items ..."
msgstr ""

#: feeder.py:1097 feeder.py:1201
msgid "Fetching aborted! DB error: %a"
msgstr ""

#: feeder.py:1108
msgid "Unknown error: %a"
msgstr ""

#: feeder.py:1117 feeder.py:1166
msgid "Handler error: %a"
msgstr ""

#: feeder.py:1127 feeder.py:1135 feeder.py:1151 feeder.py:1156 feeder.py:1251
#: feeder.py:1264 feeder.py:1288 feeder.py:1293 feeder.py:1297 feeder.py:1325
#: feeder.py:1384 feeder.py:1416 feeder.py:1426 feeder.py:1655 feeder.py:1672
#: feeder.py:1689 feedex_entry.py:136 feedex_entry.py:160 feedex_entry.py:306
#: feedex_entry.py:432 feedex_entry.py:503 feedex_feed.py:460
#: feedex_feed.py:581 feedex_feed.py:634 feedex_gui_tabs.py:941
#: feedex_rule.py:203 feedex_rule.py:288 feedex_rule.py:359 feedex_rule.py:469
#: feedex_rule.py:553
msgid "DB error: %a"
msgstr ""

#: feeder.py:1163
msgid "Updating metadata for %a"
msgstr ""

#: feeder.py:1172
msgid "Error updating metadata for feed %a"
msgstr ""

#: feeder.py:1178 feedex_feed.py:386 feedex_rule.py:93 feedex_rule.py:433
msgid "Invalid data type for %a"
msgstr ""

#: feeder.py:1181 feeder.py:1213 feeder.py:1626 feeder.py:1641
#: feedex_gui_main.py:1970 feedex_gui_main.py:1984 feedex_gui_main.py:2091
#: feedex_gui_tabs.py:1431 feedex_rule.py:252 feedex_rule.py:521
msgid "DB Error: %a"
msgstr ""

#: feeder.py:1184
msgid "Metadata updated for feed %a"
msgstr ""

#: feeder.py:1220
msgid "Updating statistics ..."
msgstr ""

#: feeder.py:1254
msgid "Deleted %a items from search history"
msgstr ""

#: feeder.py:1268
msgid "Deleted %a learned rules"
msgstr ""

#: feeder.py:1301
msgid "Trash emptied: %a"
msgstr ""

#: feeder.py:1347
msgid "Mass recalculation started..."
msgstr ""

#: feeder.py:1381
msgid "Getting entries..."
msgstr ""

#: feeder.py:1413
msgid "Committing batch ..."
msgstr ""

#: feeder.py:1420
msgid "Learning rule batch ..."
msgstr ""

#: feeder.py:1436
msgid "Batch committed"
msgstr ""

#: feeder.py:1441
msgid "Recalculation finished!"
msgstr ""

#: feeder.py:1487
msgid "DATABASE LOCKED!"
msgstr ""

#: feeder.py:1495
msgid ""
"\n"
"DATABASE LOCKED FOR FETCHING!\n"
"\n"
msgstr ""

#: feeder.py:1500 feeder.py:1504
msgid "NOT FOUND"
msgstr ""

#: feeder.py:1568
msgid "DB locked!"
msgstr ""

#: feeder.py:1572
msgid "Starting DB miantenance"
msgstr ""

#: feeder.py:1574
msgid "Performing VACUUM"
msgstr ""

#: feeder.py:1576
msgid "Performing ANALYZE"
msgstr ""

#: feeder.py:1578
msgid "REINDEXING all tables"
msgstr ""

#: feeder.py:1581
msgid "Updating document statistics"
msgstr ""

#: feeder.py:1591
msgid "DB maintenance completed"
msgstr ""

#: feeder.py:1594
msgid "DB maintenance failed! (%a)"
msgstr ""

#: feeder.py:1606
msgid "File already exists!"
msgstr ""

#: feeder.py:1628
msgid "Data successfully exported"
msgstr ""

#: feeder.py:1629
msgid "Error writing JSON data to %a"
msgstr ""

#: feeder.py:1633
msgid "Error reading data from %a"
msgstr ""

#: feeder.py:1634
msgid "Invalid data format (not a list)"
msgstr ""

#: feeder.py:1659
msgid "Feed data successfully imported from %a"
msgstr ""

#: feeder.py:1676
msgid "Rules successfully imported from %a"
msgstr ""

#: feeder.py:1693
msgid "Flags successfully imported from %a"
msgstr ""

#: feeder_query_parser.py:213 feeder_query_parser.py:231
msgid "%a is not a valid field! Changed to ID"
msgstr ""

#: feeder_query_parser.py:285
msgid "Invalid query type!"
msgstr ""

#: feeder_query_parser.py:297
msgid "Invalid search field value!"
msgstr ""

#: feeder_query_parser.py:304
msgid "Category not found!"
msgstr ""

#: feeder_query_parser.py:310
msgid "Channel ID not found!"
msgstr ""

#: feeder_query_parser.py:316
msgid "Category or Channel not found!"
msgstr ""

#: feeder_query_parser.py:348
msgid "Could not parse date (date_from)!"
msgstr ""

#: feeder_query_parser.py:354
msgid "Could not parse date (date_to)!"
msgstr ""

#: feeder_query_parser.py:361
msgid "Could not parse date (date_add_from)!"
msgstr ""

#: feeder_query_parser.py:367
msgid "Could not parse date (date_add_to)!"
msgstr ""

#: feeder_query_parser.py:380
msgid "Invalid value for last Nth update!"
msgstr ""

#: feeder_query_parser.py:446
msgid "Wildcards are not allowed with this type of query!"
msgstr ""

#: feeder_query_parser.py:508
msgid "Invalid logical operation! Must be: any, all, near, or phrase"
msgstr ""

#: feeder_query_parser.py:812
msgid "Nothing to search. Aborting..."
msgstr ""

#: feeder_query_parser.py:898 feeder_query_parser.py:1198
#: feeder_query_parser.py:1284
msgid "Invalid grouping! Must be: %a"
msgstr ""

#: feeder_query_parser.py:1017
msgid "contexts"
msgstr ""

#: feeder_query_parser.py:1017 feeder_query_parser.py:1831
msgid "entries"
msgstr ""

#: feeder_query_parser.py:1527
msgid "rergistered channels"
msgstr ""

#: feeder_query_parser.py:1530
msgid "categories"
msgstr ""

#: feeder_query_parser.py:1649
msgid "YES"
msgstr ""

#: feeder_query_parser.py:1650
msgid "NO"
msgstr ""

#: feeder_query_parser.py:1651
msgid "-- All Fields --"
msgstr ""

#: feeder_query_parser.py:1652
msgid "-- All Channels/Categories --"
msgstr ""

#: feeder_query_parser.py:1653 feeder_query_parser.py:1942 feedex_utils.py:165
msgid "<NONE>"
msgstr ""

#: feeder_query_parser.py:1654
msgid "String Matching"
msgstr ""

#: feeder_query_parser.py:1655 feedex_gui_utils.py:572
msgid "Full Text Search"
msgstr ""

#: feeder_query_parser.py:1656 feedex_gui_dialogs_entts.py:1290
#: feedex_gui_utils.py:566
msgid "REGEX"
msgstr ""

#: feeder_query_parser.py:1699
msgid "rules"
msgstr ""

#: feeder_query_parser.py:1828
msgid "results"
msgstr ""

#: feeder_query_parser.py:1923
msgid "<<NUM?>>"
msgstr ""

#: feeder_query_parser.py:1950 feedex_gui_feeds.py:260 feedex_gui_main.py:487
#: feedex_gui_tabs.py:853 feedex_gui_utils.py:352 feedex_gui_utils.py:1046
msgid "Today"
msgstr ""

#: feeder_query_parser.py:1951 feedex_gui_utils.py:1047
msgid "Yesterday"
msgstr ""

#: feeder_query_parser.py:2007
msgid "Entry does not exist!"
msgstr ""

#: feeder_query_parser.py:2044
msgid ""
"Learned Keywords:\n"
msgstr ""

#: feeder_query_parser.py:2073
msgid "Channel does not exist!"
msgstr ""

#: feeder_query_parser.py:2123
msgid "Error reading template file %a!"
msgstr ""

#: feeder_query_parser.py:2126
msgid "Target directory %a does not exist! Aborting..."
msgstr ""

#: feeder_query_parser.py:2141
msgid "File %a already exists!"
msgstr ""

#: feedex_clipper.py:33 feedex_clipper.py:34
msgid "Empty selection!"
msgstr ""

#: feedex_docs.py:11
msgid ""
"\n"
"Usage: <b>feedex [parameters|filters] [actions]</b>\n"
"\n"
"    <b>Actions</b>:\n"
"        -h, --help                              Show this help\n"
"        -hh, --help-long                        Show full manual (use with ' | less -R' because it is long :))\n"
"        -v, --version                           Version info\n"
"        --about                                 About Feedex...\n"
"\n"
"        -g, --get-news [ID]                     Get news without checking intervals (force download)\n"
"                                                Providing ID will limit download to specified channel ID\n"
"\n"
"        -a, --add-feed [URL]                    Add news channel by providing a URL pointing to RSS\n"
"        -D, --delete-feed [ID] [option]         Delete news channel specified by ID (first - move to Trash, second - delete permanently with all entries)\n"
"\n"
"        -u, --update-feeds [ID]                 Update news channel data like title, subtitle, tags etc.. Limit by ID\n"
"    \t-L, --list-feeds                        List all registerred channels\n"
"        -c, --check [ID]                        Check for news (applying intervals and no force download with etag/modified). \n"
"                                                Limit by channel ID\n"
"\n"
"        -r, --read-entry [ID]                   Read entry/news article contents by ID\n"
"        -o, --open-in-browser [ID|URL]          Open link of an entry by ID or URL. Register openning and learn keywords/rules for later ranking\n"
"        -F, --read-feed [ID]                    Get all entries from a Channel specified by ID\n"
"        -C, --read-category [ID|NAME]           Get all entries for a specified Category\n"
"        -q, --query [Phrase]                    Query entries with search phrase (see -hh option for details)\n"
"\n"
"        --csv                                   Output in CSV format (no beautifiers)\n"
"        --short                                 Show short output for queries\n"
"        --headlines                             Output only date, title and channel\n"
"\n"
"\n"
"    <b>!!! See feedex -hh for full manual !!!</b>\n"
"        --help-feeds                            Manual on Feeds and Ctegories \n"
"        --help-entries                          Manual on Entries (articles, notes, hilights etc.)\n"
"        --help-rules                            Manual on rules, ranking and flags\n"
"        --help-scripting                        Manual for scripting\n"
"        --help-examples                         Command line examples\n"
"\n"
msgstr ""

#: feedex_docs.py:54
msgid ""
"\n"
"Usage: <b>feedex [parameters|filters] [actions] [arguments]</b>\n"
"\n"
"    Feedex lets you organize your news and notes. It classifies incoming news according to your previous choices and manually created rules. \n"
"    But Feedex can also handle other types of data - you can save categorized notes and analyze them for interesting features\n"
"    to apply to rank and highlight news, to help you get important information quickly and efficiently. \n"
"    It is meant to be used as a scheduled job (with desktop notifications) or hotkey script for quickly saving highlighted text or keyword,\n"
"    adding a news channel with URL or simply as a tool to read, query and analyse news/notes.\n"
"\n"
"    Technical notes:\n"
"    Feedex uses <b>SQLite</b> database to store data and Xapian for indexing. DB and index by default can be found in <b>~/.local/share/feedex/feedex.db/</b>\n"
"    Language Models, used to rank and extract keywords, can be found in <b>/use/share/feedex/models</b> in pickle format. \n"
"    You can add new language model with examples in <b>/usr/share/feedex/data/model_generators</b> directory.\n"
"    Icons and thumbnails are saved separately in <b>~/.local/share/feedex/icons</b> and <b>~/.local/share/feedex/cache</b> respectively.\n"
"\n"
"    <b>General:</b>\n"
"        -h, --help                              Show short help\n"
"        -hh, --help-long                        Show this help\n"
"        -v, --version                           Version info\n"
"        --about                                 About Feedex...\n"
"\n"
"    <b>Display parameters:</b>\n"
"        --csv                                   Output in CSV format (no interlines and colours/beautifiers)\n"
"        --json                                  Output as standard JSON string\n"
"        --short                                 Output shortened version\n"
"        --headlines                             Output only date, title and channel\n"
"\n"
"        --html-template=[FILE]                  Output results as HTML using a template from text file\n"
"                                                See --help-html for more information abot displaying results in HTML format\n"
"\n"
"        --silent                                Do not print output\n"
"\n"
"        --trunc=INT                             Truncate output of fields to INT chars (0 for no truncation)\n"
"        --delimiter=STR                         Change field separator (cli/csv), delault |\n"
"        --delimiter2=STR                        Change item separator inside field, e.g. for snippets and contexts (cli/csv), delault ;\n"
"        --escape=STR                            Escape sequence for delimiters (useful for CSV)\n"
"\n"
"        --bold_beg=STR, --bold_end=STR          Strings to be inserted as bold markup beginning/end. Used for displaying snippets, to hilight\n"
"                                                the search phrase. Defaults are <b>,</b>\n"
"\n"
"        --desktop-notify                        Show desktop notifications instead CLI output (-g, -c, and --query)\n"
"                                                and inform about adding new entries, rules and feeds from URL\n"
"                                                Useful for scheduled tasks and keyboard shortcuts (e.g. adding a hilighted note with --clipboard)\n"
"\n"
"        --clipboard                             Enable destkop clipboard/selection support. Selection and window title can be used in arguments\n"
"                                                for actions: add-entry, add-feed, add-keyword, add-regex, add-full-text, add-full-text-exact\n"
"                                                Substitutions:  \n"
"                                                    %%  -   % character\n"
"                                                    %s  -   current text selection\n"
"                                                    %w  -   curent window name \n"
"\n"
"\n"
"    <b>Fetching:</b>\n"
"        -g, --get-news [ID]                     Get news without checking intervals, ETags or Modified tags (force download). Limit by feed ID\n"
"        -c, --check [ID]                        Check for news (applying intervals and no force download with etag/modified). Limit by feed ID\n"
"        -o, --open-in-browser [ID|URL]          Open entry by ID or URL in browser. Register openning for later ranking and\n"
"                                                learn rules.\n"
"\n"
"    <b>Feeds:</b>\n"
"        Every news channel is saved as feed. Feeds can be downloaded, edited, deleted, added by providing URL etc. Downloaded news \n"
"        are saved as entries. See <b>--help-feeds</b> option for more detailed information.\n"
"\n"
"    \t-L, --list-feeds                        List all registerred feeds\n"
"        -a, --add-feed [URL]                    Add feed providing a URL pointing to RSS. \n"
"                                                Possible parameters: --handler=[rss|html|script|local], --category=[ID/Name]\n"
"                                                --no_fetch - do not fetch anything to allow further editting (the same as with 'local/html/script' handlers)\n"
"        -u, --update-feeds [ID]                 Update feed data like title, subtitle, tags etc.. Limit by ID\n"
"                                                Providing ID will limit download to specified feed ID\n"
"        -D, --delete-feed [ID]                  Delete feed specified by ID. Deleted feed is moved to Trash. \n"
"                                                Deleting Feed in Trash will remove it permanently with all associated Entries\n"
"        -F, --read-feed [ID]                    Get all entries from a feed specified by ID (filters like in --query)\n"
"        -C, --read-category [ID|NAME]           Get all entries from a category specified by ID or NAME (filters like in --query)\n"
"        --examine-feed [ID]                     Check feed configuration\n"
"        --edit-feed [ID] [FIELD] [VALUE]        Change feed's (by ID) PARAMETER \n"
"                                                (for param. names check --examine-feed) to VALUE\n"
"                                                NULL or NONE means NULL value\n"
"\n"
"        --insert-feed-before [ID] [TARGET ID]   Change display order of Channel/Category so it is displayed before TARGET IDd Channel/Category\n"
"                                                If IDd is a Channel and TARGET is a Category, then Channel will be assigned to the Category\n"
"                                                This command changes display_order field in feeds table\n"
"\n"
"        --test-regexes [ID]                     Download URL and perform sample parsing with saved REGEXes for a specified Feed.\n"
"                                                DB will not be updated. For testing.\n"
"\n"
"    <b>Categories:</b>\n"
"        Every Feed or Entry can be assigned to a Category\n"
"\n"
"        --list-categories                       List all available categories\n"
"        --show-categories-tree                  List Category/Channel tree\n"
"        --add-category [Title] [Subtitle]       Add new category with given title and subtitle\n"
"        --delete-category [ID]                  Remove category with given ID. If category is already in Trash, it will be removed permanently\n"
"        --edit-category [ID] [FIELD] [VALUE]    Edit ID'd category - change field's value to [VALUE].\n"
"                                                NULL or NONE means NULL value\n"
"\n"
"\n"
"    <b>Entries:</b>\n"
"        Every news article, note, highlight etc. is saved as an Entry. Entries are available for queries and linguistic analysis.\n"
"        You can add entries of any category/feed as well as delete any entry. Entries are linguistically analysed and ranked by importance\n"
"        according to learned and manual rules and keywords.\n"
"        Every entry has a unique ID. See <b>--help-entries</b> for more detailed information\n"
"\n"
"        -r, --read-entry [ID]                   Read entry contents by ID (does not cause learning)\n"
"        -S, --find-similar [ID]                 Find similar entries to ID'd (filters like in --query)\n"
"                                                --limit=INT        Limit results to INT-best (inproves performance)\n"
"        --rel-in-time [ID]                      Entry's relevance as a time series - like --term-in -time for entry's keywords (filters like in --query)\n"
"                                                --limit=INT        Limit results to INT-best (inproves performance)\n"
"        --mark [ID] [N]                         Mark entry as read N times (increases weight in later ranking) and learn features\n"
"                                                options:\n"
"                                                --learn,--no-learn         Extract patterns from Entry?\n"
"        --mark-unimportant [ID]                 Mark entry as unimportant and learn negative features\n"
"                                                options:\n"
"                                                --learn,--no-learn         Extract patterns from Entry?\n"
"        --flag [ID] [N]                         Flag entry to be highlighted in queries (0 - no flag)\n"
"                                                Flags are also added if entry contains a keyword specified by --add-keyword\n"
"                                                This helps to highlight items important to user\n"
"        -N, --add-entry [TITLE] [TEXT]          Add an entry providing title and text. Useful for saving highlights or notes.\n"
"                                                NULL or NONE means NULL value\n"
"                                                Parameters:\n"
"                                                --category=[INT|NAME]   Specifiy Entry's Category\n"
"                                                --feed=[INT]            Specify Entry's Feed\n"
"                                                --learn, --no-learn     Do you want to learn features from this entry for ranking news?\n"
"                                                                        Default is: learn\n"
"                                                                        Learning is useful to find topics that will interest you most based on your notes\n"
"                                                --note, --news          Is it a user's Note (default) or News item?\n"
"\n"
"\n"
"\t    --delete-entry [ID]                     Delete entry/news article/note by its ID. If the Entry is already in Trash it will\n"
"                                                be removed permanently with all keywords/rules\n"
"        --edit-entry [ID] [FIELD] [VALUE]       Edit ID'd Entry. Change [FIELD] to specified [VALUE]. \n"
"                                                NULL or NONE means NULL value\n"
"                                                See --help-entries for field names\n"
"\n"
"        --add-entries-from-file [FILE]          \n"
"        --add-entries-from-pipe                 You can add Entries wholesale from a JSON file or pipe input compatibile with JSON format.\n"
"                                                For input format see <b>--help-entries</b> option\n"
"                                                --learn     Do you want to learn features from added entries if 'read' param is > 0?\n"
"                                                    \n"
"                                    \n"
"\n"
"    <b>Queries:</b>\n"
"        --list-history                          Show search history\n"
"        \n"
"        -q, --query [Phrase]                    Query entries with a search phrase:\n"
"                                                operators:\n"
"                                                \n"
"                                                escape - \\\n"
"                                                \n"
"                                                Full Text Search:\n"
"                                                    \n"
"                                                    Capitalized tokens are treated as unstemmed/exact\n"
"                                                    \n"
"                                                    logical: OR, AND, NOT, (, )\n"
"                                                    proximity: NEAR, ~[NUM_OF_WORDS], ~\n"
"                                                    wildcards: \n"
"                                                        *          - any character string\n"
"                                                        <DIV>      - divider (period, punctation etc.)\n"
"                                                        <NUM>      - number\n"
"                                                        <CAP>      - capitalized word\n"
"                                                        <ALLCAP>   - word with all capitals\n"
"                                                        <UNCOMM>   - uncommon word\n"
"                                                        <POLYSYL>  - long word (3+ syllables)\n"
"                                                        <CURR>     - currency symbol\n"
"                                                        <MATH>     - math symbol\n"
"                                                        <RNUM>     - Roman numeral\n"
"                                                        <GREEK>    - Greek symbol\n"
"                                                        <UNIT>     - unit marker/symbol\n"
"                                                        \n"
"\n"
"\n"
"                                                String Matching:\n"
"                                                    wildcard: *\n"
"                                                    field beginning/end: ^,$\n"
"                                                        \n"
"\n"
"                                                    \n"
"                                                parameters:\n"
"                                                --lang=         language used in query for tokenizing and stemming\n"
"                                                --case_ins      query is case insensitive\n"
"                                                --case_sens     query is case sensitive\n"
"                                                --field=        field to search. 0 or None for all.\n"
"                                                                Available fields:\n"
"                                                                author, publisher, contributors, title, tags, category, comments\n"
"                                                --type=         type of qery\n"
"                                                                'fts' - full text (default)\n"
"                                                                'string' - simple string matching\n"
"\n"
"                                                --logic=        How should fts terms be connected by default?\n"
"                                                                    'any' - any term matches (OR)\n"
"                                                                    'all' - all terms must match (AND)\n"
"                                                                    'near' - evaluate terms' proximity\n"
"                                                                    'phrase' - treat terms as a phrase\n"
"                                                \n"
"\n"
"                                                --sort=/--rsort=   sort/reverse sort by field (see --read-entry for field names)\n"
"                                                --rev            display in reverse order\n"
"                                                --group=         Display as a tree grouped by this parameter \n"
"                                                                (category, feed, flag, hourly, daily, monthly, similar)\n"
"                                                --depth=         Integer telling the depth of each node for grouping. If 0, every result is shown\n"
"                                                                 If no grouping was selected, simply first N results will be shown\n"
"\n"
"\n"
"                                                filters: \n"
"                                                --from=,to=     filter by published dates\n"
"                                                --added_from=, \n"
"                                                --added_to=     filter by dates when entry was added to database\n"
"                                                --last          limit to only recently added (on last update)\n"
"                                                --last_n=       limit to only last N updates\n"
"                                                --feed=         limit to feed specified by ID\n"
"                                                --category=     limit to category and feeds in category specified by ID\n"
"                                                --today         limit to last 24h\n"
"                                                --last_hour     limit to last 1h\n"
"                                                --last_week, --last_month, --last_quarter, --last_six_months, --last_year   limit to 7, 31, 93 or 365 days ago\n"
"                                                --read/--unread     limit to read/unread only (see --mark)\n"
"                                                --flag=             limit by flag. Possible values:\n"
"                                                                        all - flagged and unflagged entries\n"
"                                                                        no  - only unflagged entries\n"
"                                                                        all_flags - include all flags\n"
"                                                                        [INT] - choose a flag to filter by (by ID)\n"
"                                                --note, --news   limit to only user's Notes/News items \n"
"                                                --handler=       limit to feed handler (rss, html, script, local)\n"
"                                                --deleted        indlude deleted feeds, categories and entries\n"
"\n"
"                                                \n"
"                                                paging of results:\n"
"                                                --page=INT           page number (default is 1)\n"
"                                                --page_len=INT       page length (default is 3000)\n"
"                                                \n"
"\n"
"                                                misc:\n"
"                                                --json_query            parse query argument as JSON and extract filters/phrase from it. Useful for scripts.\n"
"                                                                        see <b>--help-scripting</b> for details\n"
"    \n"
"                                                --export-to-file=FILE   export query results to JSON file that can be used with --add-entries-from-file option\n"
"                                                                        to move entries between databases (e.g. for archiving)\n"
"                                                                        This option works only with normal queries, so time series, groupings, contexts are excluded   \n"
"\n"
"                                                                \n"
"        --term-context [TEXT]                   Show contexts for given terms (parameters as in query, contexts taken from results)\n"
"\n"
"        --trends [TEXT]                         Show trends (frequent keywords) for filterred entries (filters as for query)\n"
"        --trending [TEXT]                       Show trending entries for given filters (filters as for query)\n"
"            \n"
"        --term-net [TERM]                       Show terms connected to a given term by context (parameters:lang)\n"
"        --term-in-time [TERM]                   Show time distribution of a term (filters like in --query) \n"
"                                                parameters:\n"
"                                                --lang=          language used for query\n"
"                                                --group=         grouping (hourly, daily, monthly)\n"
"                                                --plot           plot data points in CLI\n"
"                                                --term-width=    width of terminal window (for aestetics)\n"
"\n"
"                                                \n"
"    <b>Handlers:</b>\n"
"        Every Feed has a protocol handler specified:\n"
"        <b>rss</b>      RSS protocol (needs a valid URL)\n"
"        <b>html</b>     Fetch a HTML page and parse it with REGEXes from rx_... fields\n"
"        <b>script</b>   Run a script to fetch for this channel specified in <b>script_file</b> field\n"
"        <b>local</b>    No internet protocol. Feeds are not fetched from the Internet, but can be populated by scripts (see --add-entries-from-file/pipe)\n"
"\n"
"    <b>Rules (Keywords and Terms):</b>\n"
"        Rules are learned when article is opened in browser (-o option) or added manually (--add-entry with --learn). \n"
"        They can also be added manually as keywords, phrases, REGEXes etc.\n"
"        Learned rules are used to rank incoming news by importance (you can sort by importance in queries with --sort=importance)\n"
"        and get most important news on top. \n"
"        Manual rules are used for flagging/highlighting articles so they are more visible. \n"
"        Feedex learns rules by extracting important phrases from opened entries using language models.\n"
"        See <b>--help-rules</b> for more info\n"
"\n"
"        --list-rules                            Show all non-learned rules (Keywords, REGEX and strings)       \n"
"        -K, --add-keyword [TEXT]                Add keyword(s) to rules applied on every news check (simple string matching)\n"
"                                                If a keyword is matched in an incoming news or note, it will be highlighted\n"
"                                                in notifications and queries (see --flag)\n"
"                                                parameters:\n"
"                                                --case_ins, --case_sens     for c. ins. matching\n"
"                                                --feed=[ID]                 feed ID to be matched exclusively\n"
"                                                --field=[NAME]              field name to be exclusively matched (\n"
"                                                                                Available fields:\n"
"                                                                                (author, publisher, contributors,\n"
"                                                                                title, tags, category, comments)\n"
"                                                --weight                    weight ascribed to this rule\n"
"                                                --lang                      language to be matched and used for stemming and tokenizing\n"
"                                                --flag                      choose a flag to use if matched. Possible values: 1-5 or no\n"
"                                                \n"
"        --add-regex [TEXT]                      Add REGEX to rules applied on every news check\n"
"                                                (parameters: as in previous option)\n"
"        --add-full-text [TEXT]                  Add stemmed and tokenized query to rules applied on every news check.\n"
"                                                Wildcards and logical operators are not supported\n"
"                                                (parameters: as in previous option)\n"
"\n"
"        --edit-rule [ID] [FIELD] [VALUE]        Edit ID'd Rule. Change [FIELD] to specified [VALUE]. \n"
"                                                \\NULL or \\NONE means NULL value\n"
"                                                See --help-rules for field names\n"
"\n"
"        --delete-rule [ID]                      Delete rule by its ID (see: --show-rules)\n"
"\n"
"        --keywords [ID]                         Show/generate features/keywords for a specified entry/article.\n"
"                                                Those same keywords from read entries are used for ranking new documents.\n"
"        --rules-for-entry [ID]                  Show rules that matched and added to importance of ID'd entry\n"
"\n"
"\n"
"    <b>Flags:</b>\n"
"        --list-flags                            Display all Flags\n"
"        --add-flag [NAME] [DESC]                Add new flag with given NAME and optional DESCription\n"
"        --edit-flag [ID] [FIELD] [VALUE]        Edit flag by ID\n"
"        --delete-flag [ID]                      Delete flag by ID\n"
"\n"
"\n"
"    <b>Misc:</b>\n"
"        --clear-history                         Clear search history\n"
"        --delete-query-rules                    Deletes all rules learned from query search phrases\n"
"        --delete-learned-rules                  Deletes all learned keywords/rules (<i>use cautiously</i>)\n"
"        --empty-trash                           Permanently removes all Entries, Feeds and Categories marked as deleted\n"
"\n"
"\n"
"    <b>Data and Dev:</b>\n"
"        \n"
"        --export-rules [FILENAME]               Export added rules to json file\n"
"        --import-rules [FILENAME]               Import added rules from json file to current DB\n"
"\n"
"        --export-feeds [FILENAME]               Export saved news channels to json file\n"
"        --import-feeds [FILENAME]               Import saved news channels from json file to current DB\n"
"\n"
"        --export-flags [FILENAME]               Export saved flags to json file\n"
"        --import-flags [FILENAME]               Import saved flags from json file to current DB\n"
"\n"
"        Exports/imports can be used to move data between DBs. In addition you can export query results with --export-to-file option\n"
"        and then import it to new DB with --add-entries-from-file. This way you can archive or trim big databases.\n"
"\n"
"\n"
"        --reindex [ID]                          Index and relculate linguistic stats and tokens for all/IDd entry\n"
"        --rerank [ID]                           Recalculate importance and flag stats for all/IDd entry\n"
"        --relearn [ID]                          (Re)learn features from all read entries/IDd entry\n"
"\n"
"        --batch_size=INT                        The size of processed entries before committing\n"
"\n"
"\n"
"                                                    \n"
"    <b>Database:</b>\n"
"\n"
"        --lock-db, --unlock-db                  Force-lock/unlock database (use with caution)\n"
"        --lock-fetching,\n"
"        --unlock-fetching                       Force-lock/unlock database for fetching. Useful for scripts and error recovery\n"
"        --ignore-lock                           Ignore DB locking mechanism\n"
"        --db-stats                              Database statistics\n"
"        --timeout=INT                           (param) Timeout to try connect on case database is locked\n"
"\n"
"        --db-maintenance                        Perform maintenance on the database (VACUUM, ANALYZE and REINDEX)\n"
"                                                to reduce DB size\n"
"\n"
"                                                \n"
"\n"
"    <b>Configuration parameters:</b>\n"
"\n"
"        --config=                               Specify different configuration file. Useful for implementing different profiles.\n"
"        --log=                                  Specify different log file\n"
"        --database=                             Specify different SQLite database\n"
"        --debug                                 Set verbose debug mode to 1 - more inforation on what is done\n"
"        --debug=INT                             Set debug mode (see below)\n"
"\n"
"    <b>Possible ENVIRONMENT variables to set:</b>\n"
"\n"
"        FEEDEX_DB_PATH                          Path to SQLite database\n"
"        FEEDEX_LOG                              Path to log file\n"
"        FEEDEX_CONFIG                           Path to config file\n"
"\n"
"\n"
"    <b>Return codes:</b>\n"
"        0       No error occurred\n"
"        1       Generic error\n"
"        2       Database error (SQL, Operational or Xapian)\n"
"        3       Handler error (e.g. invalid HTTP status)\n"
"        4       Lock error (DB is locked for requested action)\n"
"        5       Invalid query options (e.g. requested search field is invalid)\n"
"        6       Input/Output data error (e.g. invalid pipe data or json data, invalid input file etc.)\n"
"        7       Validation error (e.g. invalid data type while editing entry)\n"
"        8       Referenced data not found (e.g. entry with a given ID does not exists)\n"
"        9       Invalid command line arguments\n"
"        \n"
"\n"
"    <b>Debug levels:</b>\n"
"        1       All messages\n"
"        2       Database messages\n"
"        3       Handler messages\n"
"        4       Linguistic processing messages\n"
"        5       Query messages\n"
"        6       I/O messages\n"
"        7       GUI messages\n"
"        8       Show all fields/columns in CLI queries\n"
"\n"
"\n"
"\n"
msgstr ""

#: feedex_docs.py:448
msgid ""
"\n"
"\n"
"<b>Feedex: Command examples</b>\n"
"        \n"
"        <b>feedex --rsort=adddate --category=Hilights -q</b>\n"
"            Show all documents in \"Hilights\" category and reverse-sort them by date added\n"
"        \n"
"        <b>feedex --sort=pubdate -F=1 -q</b>\n"
"            Show all news for feed 1 and sort them by publication date\n"
"\n"
"        <b>feedex --sort=pubdate -f=2 --unread -q</b>\n"
"            Show all unread news for feed 2 and sort them by publication date\n"
"\n"
"        <b>feedex --type=string -q \"example\"</b>\n"
"            Search for phrase \"example\" by simple string matching, case sensitive\n"
"\n"
"        <b>feedex --field=title --case_ins -q \"example\"</b>\n"
"            Search for \"example\" in titles, case insensitive\n"
"\n"
"        <b>feedex --headlines --group=category --depth=10 --last_month -q 'example'</b>\n"
"            Show entries containing 'example' grouped by category with headlines only\n"
"\n"
"        <b>feedex --headlines --group=category --depth=10 --last -q</b>\n"
"            Show nicely grouped headlines from last fetch\n"
"\n"
"        <b>feedex --desktop-notify --group=category --depth=10 --last -c</b>\n"
"            Fetch news and show grouped headlines from fetch as desktop notifications. Good for scheduled task\n"
"\n"
"        <b>feedex --desktop-notify --group=flag --depth=0 --last -c</b>\n"
"            Fetch news and show flagged entries only from last fetch as desktop notifications\n"
"\n"
"        <b>feedex --desktop-notify --clipboard --weight=10 --parent_category=Notes --add-entry 'Title:%w' '%s'</b>\n"
"            Add new entry to 'Notes' category with title and description suplied from desktop clipboard.\n"
"            Convenient to use as a hotkey command\n"
"            NOTE! Some desktops (e.g. GNOME) substitute % character, so you will have to escape it, so this command would look like:\n"
"            <b>feedex --desktop-notify --clipboard --weight=10 --parent_category=Notes --add-entry 'Title:%%w' '%%s'</b>\n"
"\n"
"        <b>feedex --clipboard --weight=10 --parent_category=Notes --add-entry 'Title:%w' '%s'</b>\n"
"            The same as above, but silent\n"
"\n"
"        <b>feedex --desktop-notify --weight=10 --parent_category=Notes --add-entry 'Title example' 'Description example'</b>\n"
"            Add new entry and throw desktop notification about it ( useful e.g. for Cron jobs and background script )\n"
"\n"
"        <b>feedex --desktop-notify --clipboard --weight=10 --add-keyword '%s'</b>\n"
"            Add new keyword from selected text and notify about it to desktop\n"
"\n"
"        <b>feedex --json_query -q '{\"phrase\":\"test\", \"last_week\":true, \"case_sens\":true, \"read\":true}'</b>\n"
"            An example usage of JSON query\n"
"\n"
msgstr ""

#: feedex_docs.py:500
msgid ""
"\n"
"\n"
"<b>Feedex: Feeds</b>\n"
"\n"
"Feeds (news Channels) are downloaded and parsed using handlers (rss, html) or populated by scripts (script, local - ignored during fetching).\n"
"Unless used with -g option, Feedex will respect etags and 'modified' tags if provided by publisher. \n"
"It will also check for news duplicates before saving. \n"
"HTTP return codes are analysed after download. If channel gave too many HTTP errors in consecutive tries, it will be\n"
"ignored. To try again one needs to change error parameter using <b>--edit-feed [ID] error 0 </b>\n"
"\n"
"A feed/channel can be updated periodically (autoupdate field) to check for changes. If channel is moved permanently, \n"
"new URL will be checked and saved. If channel moved temporarily, it will download from new location but keep old URL\n"
"\n"
"If needed, authentication method ('auth' field) along with login ('login') and password ('password') can be specified\n"
"and Feedex will try to use those to download a feed. IMPORTANT: passwords are stored in PLAINTEXT!\n"
"\n"
"News channels are stored in DB in <b>feeds</b> table. Value of each of those fields can be changed via <b>--edit-feed</b> \n"
"Below are field descriptions:\n"
"\n"
"    <b>id</b>                                  unique identifier (integer)\n"
"    <b>charset</b>                             character encoding stated in header.\n"
"    <b>lang</b>                                language stated in header\n"
"    <b>generator</b>                           RSS/Atom generator software used to generate the feed\n"
"    <b>url</b>                                 resource location used during download\n"
"\n"
"    <b>login, domain, passwd</b>               data used if authentication is required (auth field is not NONE)\n"
"    <b>auth</b>                                authentication method: (If changed to not NONE, user will be prompted for auth. data)\n"
"                                               <b>NONE</b> - no auth., <b>detect</b> - detect required method,\n"
"                                               <b>digest</b>, <b>basic</b> - use these methods\n"
"    <b>author, author_contact,\n"
"    publisher, publisher_contact,\n"
"    contributors, copyright</b>                author, publisher, contributors and copyright from feed header\n"
"\n"
"    <b>link</b>                                link to Homepage\n"
"    \n"
"    <b>title, subtitle, category, tags</b>     self-explanatory RSS fields\n"
"    \n"
"    <b>name</b>                                feed name displayed in Feedex's output.\n"
"    <b>lastread</b>                            Epoch-encoded date of last download\n"
"    <b>lastchecked</b>                         Epoch-encoded date of last check on this feed\n"
"    \n"
"    <b>interval</b>                            how often shoul this feed be checked for news (-c option)? in minutes\n"
"    <b>error</b>                               how many times download or parsing failed. Used to skip broken feeds after\n"
"                                               certain amount (error_threshold configuration option)\n"
"    <b>autoupdate</b>                          should Feedex automatically update feed data when -c or -g option is used?\n"
"    \n"
"    <b>http_status</b>                         last HTTP response. 200 means everything went well\n"
"    \n"
"    <b>etag, modified</b>                      etag and modified tags provided last time by the publisher\n"
"    \n"
"    <b>version</b>                             protocol version used\n"
"\n"
"    <b>is_category</b>                         is this feed a category? This is because categories are stored in the same table. \n"
"                                                <i>It is not recommended to change this manually</b>\n"
"    <b>parent_id</b>                           ID of category this feed belongs to \n"
"                                               to change use: <b>parent_category</b> or <b>parent_id</b> (using 'category' will change other field)\n"
"    \n"
"    <b>handler</b>                             protocol handler:\n"
"                                               <b>rss</b>, \n"
"                                               <b>html</b>  fetching a www page and parsing it by REGEX rules (see below)\n"
"                                               <b>script</b>  fetching with a script specified by path in <b>script_file</b> field \n"
"                                               <b>local</b> (no fetching, populated manually or by scripts)\n"
"    <b>deleted</b>                             Is feed in trash?\n"
"\n"
"    <b>user_agent</b>                          Custom User Agent tag to use with this feed only. If empty - default will be used.\n"
"                                               <i>To be used only for debug purposes!</i>\n"
"\n"
"    <b>fetch</b>                               Should Channel be fetched automatically (-c or -g option with no specified ID)\n"
"\n"
"    <b>rx_entries</b>                          REGEX for extracting main entries table (e.g. <article>.*</article>)\n"
"\n"
"    <b>rx_title, rx_link, rx_desc,</b> \n"
"    <b>rx_author, rx_category,</b>\n"
"    <b>rx_text, rx_images, rx_pubdate          REGEX lines for parsing entry strings list extracted by <b>rx_entries</b>.\n"
"                                               Non-empty <b>Title</b> and <b>Link</b> is required\n"
"                                               Only the first match for each is processed\n"
"\n"
"        Fields <b>rx_images</b> and <b>rx_link</b> can be also used to extract image hrefs or resource links respectively from description and text fields\n"
"        after fetching with rss handler (in case those entities have non-standardd markup for a particular feed)\n"
"\n"
"\n"
"    <b>rx_pubdate_feed, rx_image_feed</b>\n"
"    <b>rx_title_feed, rx_charset_feed</b>      \n"
"    <b>rx_lang_feed</b>                        REGEXes for extracting head/meta information for whole channel.\n"
"                                               Only the first match for each is processed\n"
"\n"
"    <b>script_file</b>                         Script used for fetching for this Channel\n"
"                                               Script should return a JSON string with entries (see <b>--help-scripting</b> for specification)\n"
"\n"
"\n"
"    <b>icon_name</b>                           Stock icon name for display for this Channel (it overwrites downloaded image)\n"
"\n"
"    <b>display_order</b>                       Order in which a Channel/Category should be displayed in CLI and GUI\n"
"\n"
"\n"
"\n"
"Every field can be changed with --edit-feed [ID] [FIELD] [VALUE] command, where [FIELD] is a name from above\n"
"\n"
"\n"
msgstr ""

#: feedex_docs.py:606
msgid ""
"\n"
"\n"
"<b>Feedex: Entries</b>\n"
"\n"
"Entries are downloaded news articles (see -c and -g options) and notes added by users (see --add-entry).\n"
"Text fields are stripped of html using re. Images and links are extracted and saved.  \n"
"Entries are stored in DB in 'entries' table. Below, are field descriptions:\n"
"\n"
"    <b>id</b>           unique identifier (integer)\n"
"    <b>feed_id</b>      ID of Feed or Category this Entry belongs to (feed and category IDs do not overlap)\n"
"                        to change use: <b>parent_category</b>, <b>feed</b>, <b>parent_id</b> or <b>feed_id</b>\n"
"    \n"
"    <b>charset</b>      character encoding used in this entry ('utf-8' by default)\n"
"    <b>lang</b>         language used in this entry. If not provided in RSS/Atom, it will be heuristically detected\n"
"    \n"
"    <b>title, author, author_contact, contributors, publisher, publisher_contact, category, tags</b> - data from RSS headers\n"
"    <b>desc</b>                Description section (manually added entries fill up title and desc fields)\n"
"    \n"
"    <b>link</b>                Link to article\n"
"    <b>pubdate</b>             Epoch-encoded publication date\n"
"    <b>pubdate_str</b>         Publication date - human readable\n"
"    \n"
"    <b>guid</b>                Global identifier for entry provided by publisher (these, and links, are checked at parsing\n"
"                                to avoid duplicates)\n"
"    \n"
"    <b>comments, source, links</b>    Data extracted from respective feed sections\n"
"\n"
"    <b>text</b>                This field contains all text found in 'contents' section of an RSS/Atom. HTML is stripped,\n"
"                                links to images are extracted and saved at 'images' field\n"
"    \n"
"    <b>addate</b>              Epoch-encoded date when entry was added to DB/modified\n"
"    <b>addate_str</b>          Added date - human readable\n"
"\n"
"    <b>read</b>                 How many times was an entry opened (-o section) or marked. User-added, not downloaded entries\n"
"                                are assigned status equal to default_entry_weight configuration parameter (2 if not given). \n"
"                                Feedex extract learning features from entries with read > 0 to use them for ranking of\n"
"                                incoming news (see --mark option). Status also influences the weight of features learned\n"
"                                from an entry.\n"
"    <b>importance</b>          This is a rank assigned by matching learned rules. New entries are sorted by this field\n"
"        \n"
"    <b>sent_count</b>          Sentence count\n"
"    <b>word_count</b>          Word count (non-punctation tokens)\n"
"    <b>char_count</b>          Character count\n"
"    <b>polysyl_count</b>       Count of polysyllables (words with >3 syllables)\n"
"    <b>com_word_count</b>      Commond word count. Common words are checked against lists predefined in language model\n"
"    <b>numerals_count</b>      Count of numerals\n"
"    <b>caps_count</b>          Count of capitalized words (for bicameral languages)\n"
"    \n"
"    <b>readability</b>         Purely heurstic readability measure added as a token prefixed with MX. Found in ling_processor module\n"
"    <b>weight</b>              A number to compensate for document length and information content, so that very long articles are not \n"
"                               ranked at the top by virtue of length alone. Calculations found in ling_processor module\n"
"\n"
"    <b>flag</b>                Increased whenever flagging rule is matched. It causes entry to be highlighted on output.\n"
"                               Useful for catching important keywords or phrases regardless of learned ranking (see --flag option)\n"
"\n"
"    <b>images</b>              Links to images extracted from HTML\n"
"    <b>enclosures</b>          Links to other data/media\n"
"\n"
"    <b>deleted</b>             Was Entry moved to Trash?\n"
"    <b>note</b>                Is entry a News item or user's note?\n"
"\n"
"    <b>node_id</b>             Parent node entry ID \n"
"    <b>node_order</b>          Entry's order within parent node \n"
"\n"
"    <b>ix_id</b>               Entry ID in Xapian index \n"
"    \n"
"\n"
"Each of those fields can be sorted by using --sort,--rsort query parameter.\n"
"Fields: 'author','publisher','contributors','title','tags','category' can be specifically searched\n"
"in query. If no field is given, every each text field will be searched\n"
"\n"
"For <b>--add-entry-from-file</b> and <b>--add-entry-from-pipe</b> or <b>script</b> handler, input can be given to mass-insert entries.\n"
"Input needs to be in JSON format or list of dicts, as in:\n"
"\n"
"[  \n"
"{'feed_id' : <int>, (must be provided and > 0)\n"
"... other fields from above ... \n"
"\n"
"},\n"
"... other entries ...\n"
"]\n"
"\n"
"Fields other than:\n"
"'feed_id','read','flag','charset','lang','title', 'desc', 'text', 'author', 'publisher', 'contributors',\n"
"'author_contact', 'publisher_contact', 'link', 'pubdate_str', 'guid', 'category'\n"
"'tags','comments','source','links','images','enclosures', 'deleted', 'note', 'node_id', 'node_order'\n"
"\n"
"... will be overwritten or ommitted on processing linguistic data, text statistics and database compatibility\n"
"\n"
msgstr ""

#: feedex_docs.py:700
msgid ""
"\n"
"\n"
"<b>Feedex: Rules</b>\n"
"\n"
"Each downloaded entry in checked against saved rules. For each entry importance is calculated and it is used to rank news against \n"
"your intersts and preferences. Rules can be learned or added manually. Both contribute to importance, but if manually added rule\n"
"is matched an entry if flagged for highlighting at output (see --flag option) (this can be overriden by rule data). \n"
"Each rule is ascribed to its entry (context), and entry's read status or amount of times opened (see --mark option) multiplies importance \n"
"given from this particular rule. \n"
"Each entry has 'weight' field, that is also multiplied when matching to offset advantage given to long news articles.\n"
"\n"
"Each rule's weight is also multiplied by weight of a field it was extracted from, e.g. you will want title to bear more weight\n"
"than text. Field weight is implemented during feature learning\n"
"\n"
"Learned rules are simply features extracted by ling_processor according to tagging and rules whenever entry is opened in browser\n"
"or marked. Example language model is described in comments in <b>sample_model_generator.py</b> in 'utils' folder along with mechanism\n"
"used for analysis, extraction, tagging and tokenizing.\n"
"\n"
"Rules are stored in DB in rules table. Below are field descriptions:\n"
"\n"
"    <b>id</b>                   unique identifier for a rule (integer)\n"
"    <b>name</b>                 name of rule used for display (<i>not matching!</i> Display only)\n"
"    <b>type</b>                 matching type of a rule:\n"
"                                values:\n"
"                                    string, 0   - simple string matching\n"
"                                    full, 1     - simple stemmed matching\n"
"                                    regex, 2    - REGEX search\n"
"\n"
"    <b>feed_id</b>              ID of a feed or category whose entries are exclusively matched against this rule\n"
"                                to change use: <b>category</b>, <b>feed</b> or <b>feed_id</b>\n"
"    <b>field_id</b>             ID of a field to be matched by a rule, also: <b>field</b>\n"
"                                values: 'author','publisher','contributors','link','title','tags','category' \n"
"\n"
"    <b>string</b>               string to be matched according to rule type\n"
"    <b>case_insensitive</b>     is match case insensitive? 1 or 0\n"
"    <b>lang</b>                 what language (of an entry) rule applies to\n"
"    <b>weight</b>               increase in importance from this rule (later multiplied by context status and entry weight)\n"
"    <b>additive</b>             if rule importance additive or one-time\n"
"    <b>learned</b>              is rule learned?\n"
"                                values 1-learned, 0-manually added\n"
"    <b>flag</b>                 Is rule flagging matched entry? Default is YES\n"
"    <b>context_id</b>           ID of an entry that this rule comes from\n"
"\n"
"    \n"
"Manual and search phrase rules can be deleted and edited by ID\n"
"(see --list-rules)\n"
"Fresh databases have no rules. As said before, they are learned by opening articles and adding notes.\n"
"Rules can be relearned using --relearn option.\n"
"\n"
"\n"
"\n"
"\n"
"<b>Feedex: Flags</b>\n"
"\n"
"Flags are manual markers for Entries that can be searched for. Entry can be flagged if matched by a Rule (id specified - see above).\n"
"If more than one differently-flagged Rules are matched, frequency distribution is constructed with Rules' weights and maximum is selected.\n"
"Flags were added to allow more detailed classification of Entries and News.\n"
"They are stored in flags SQL table. Field description:\n"
"\n"
"    <id>                        Unique identifier (integer)\n"
"    <name>                      Flag's name for display\n"
"    <desc>                      Flag's description\n"
"    <color>                     Color used to mark flagged entry in GUI. <i>Must be in #FFFFFF format</i> \n"
"    <color_cli>                 Color used to mark flagged entry in CLI\n"
"                                Possible values:\n"
"                                    WHITE, WHITE_BOLD, YELLOW, YELLOW_BOLD, CYAN, CYAN_BOLD, BLUE, \n"
"                                    BLUE_BOLD, RED, RED_BOLD, GREEN, GREEN_BOLD, PURPLE, PURPLE_BOLD, \n"
"                                    LIGHT_RED, LIGHT_RED_BOLD\n"
"\n"
msgstr ""

#: feedex_docs.py:774
msgid ""
"\n"
"<b>Feedex: Scripting</b>\n"
"\n"
"If Feed's handler is specified as <b>script</b> a user-specified command from <b>script_file</b> field (<b>feeds</b> table) is ran on fetching.\n"
"Its output, assumed to be a <b>JSON string</b> (see below), is then parsed and loaded for processing just like RSS. Errors should be handled within\n"
"the script, as STDERR is not analysed. User should take special care for the script not to cause unacceptable lattency or infinite loop, as fetching\n"
"process waits for output and blocks while waiting.\n"
"\n"
"Several parameters can be passed in the command and be replaced by variables:\n"
"\n"
"    <b>%A</b>   User Agent (feed-specific or global)\n"
"    <b>%E</b>   Last saved ETag\n"
"    <b>%M</b>   Last saved 'Modified' tag\n"
"    <b>%L</b>   Feed's login\n"
"    <b>%P</b>   Feed's password\n"
"    <b>%D</b>   Feed's auth domain\n"
"    <b>%U</b>   Feed's URL\n"
"    <b>%F</b>   Feed's ID\n"
"    <b>%%</b>   % character\n"
"\n"
"<b>Output JSON string should have specific format:</b>\n"
"\n"
"{\n"
"<i>#HTTP return headers...</i>\n"
"'status': <i>#HTTP return status, must be 200, 201, 202, 203, 204, 205 or 206 for Feedex to save results to DB</i>\n"
"'etag': ...\n"
"'modified': ...\n"
"\n"
"<i>#Feed data...</i>\n"
"<b>feed</b>:  {\n"
"                    'title': ...\n"
"                    'pubdate': <i>#Updated date string</b>\n"
"                    'image': <i>#link to feed's icon/emblem</i>\n"
"                    'charset': ...\n"
"                    'lang': <i>#Language code, e.g. 'en'</i>\n"
"\n"
"                    <i>#List of entries/articles to process</i>\n"
"                    entries : [ \n"
"                                {\n"
"                                    <i>#Mandatory fields:</i>\n"
"                                    'title': ...\n"
"                                    'link': ...\n"
"\n"
"                                    <i>#... and other optional fields - see --help-entries for details</i>\n"
"\n"
"                                },\n"
"                                ...\n"
"                                ]\n"
"\n"
"                }\n"
"\n"
"}\n"
"\n"
"\n"
"\n"
"<b>Feedex: JSON queries</b>\n"
"\n"
"You can query Feedex by using JSON string as a phrase and --json_query parameter. All filters will be overwritten by fields from JSON string.\n"
"Fields are:\n"
"{ \n"
"    <i>phrase</i>: search phrase\n"
"    \n"
"    <i>lang:</i> query language (for stemming)\n"
"    <i>handler:</i> filter by handler (rss, html, script, local)\n"
"\n"
"    <i>field:</i> which field to search (title, desc, author etc.)\n"
"    <i>qtype:</i> query type (FTS, string matching)\n"
"\n"
"    <i>date_from, date_to:</i> filter by published dates\n"
"    <i>date_add_from, date_add_to:</i> filter by added/modified date\n"
"\n"
"    <i>feed, category, parent_category, feed_id, parent_id </i>: filter by channel/category\n"
"    <i>importance:</i> importance greater than FLOAT\n"
"\n"
"    <i>note:</i> is a note? (True/False)\n"
"    <i>news:</i> is a news item? (True/False)\n"
"\n"
"    <i>case_ins, case_sens:</i> case sensitivity (True/False)\n"
"    <i>logic:</i> FTS query logic (any, all, etc.)\n"
"    \n"
"    <i>last:</i> filter by last update (True/False)\n"
"    <i>last_n:</i> filter by last N updates (INT)\n"
"\n"
"    <i>today:</i> filter for today (True/False)\n"
"    <i>last_hour:</i> filter for last hour (True/False)\n"
"    <i>last_week:</i> filter for last week (True/False)\n"
"    <i>last_month:</i> filter for last month (True/False)\n"
"    <i>last_quarter:</i> filter for last 3 months (True/False)\n"
"    <i>last_six_months:</i> filter for last 6 months (True/False)\n"
"    <i>last_year:</i> filter for last year (True/False)\n"
"\n"
"    <i>read, unread:</i> filter by read/unread status (True/False)\n"
"\n"
"    <i>deleted:</i> show deleted entries (True/False)\n"
"\n"
"    <i>sort:</i> sort by field value (precede field name qith + or - for asc/desc, e.g. +author, -pubdate)\n"
"    <i>rev:</i> reverse sort order (True/False)\n"
"\n"
"    <i>group:</i> group results by field (channel, category, flag, day, week, month)\n"
"    <i>depth:</i> grouping depth (first n results for each node according to sort order)\n"
"\n"
"}\n"
"\n"
"\n"
msgstr ""

#: feedex_docs.py:885
msgid ""
"\n"
"<b>Feedex: HTML Output</b>\n"
"\n"
"Using the --html-template= option user can output results in a predefined HTML format. Every result is processed and marked field names\n"
"in the template are replaced with relevant fields. HTML special characters are escaped. Nearly every query can be processed in this way.\n"
"\n"
"Field names must be contained within <%,%> strings, e.g. '<%title%>' will be replaced with the field 'title' from result. \n"
"\n"
"If field by a given name is not found, no changes will be made.\n"
"\n"
"<b>Additional options:</b>\n"
"\n"
"    --to-files-at-dir=[TARGET_DIR]      Save as separate files at TARGET_DIR - for mass-generated content\n"
"    --to-files-names=[STR]              Naming pattern for created files. STR is parsed the same as template (<%field%> is valid)\n"
"                                        Field valus will be truncated. Spaces and special characters will be escaped with _ character.\n"
"                                        User must take care of uniqueness. Good practice would be including <%id%> field in name string.\n"
"                                        Example:\n"
"                                            --to-files-names='<%id%>_<%pubdate_str%>_<%title%>.html'\n"
"\n"
"\n"
"<b>Field names:</b>\n"
"\n"
"    Field names are the same as SQL fields described in <b>--help-entries</b>, <b>--help-feeds</b>, and <b>--help-rules</b> sections.\n"
"\n"
"Some queries have additional fields:\n"
"\n"
"    Query with phrase:\n"
"\n"
"        rank                Result ranking (tf-idf or Xapian)\n"
"        count               Count of phrase occurrences\n"
"        snippets            A list of snippets \n"
"\n"
"\n"
"    All querries for entries:\n"
"\n"
"        feed_name           Name of Channel/Category\n"
"        parent_name         Name of Feedex Category \n"
"        feed_name_id        Name of Channel/Category with ID\n"
"        flag_name           Name of Flag\n"
"        pubdate_short       Short version of Published Date\n"
"\n"
"    Entries grouped in a summary have additonal 'is_node' field (1 means this row is a node)\n"
"\n"
"\n"
"    Time series queries have only two fields:\n"
"\n"
"        time                The time slice (depends on grouping)\n"
"        frequency           Term/Document frequency\n"
"\n"
"    Contexts have additional 'context' field\n"
"\n"
"    Related terms:\n"
"        term, weight, count\n"
"\n"
"    Keywords for etry: \n"
"        term, weight\n"
"\n"
"    \n"
"\n"
"<b>EXAMPLE:</b>\n"
"\n"
"<!DOCTYPE html>\n"
"<html>\n"
"    <head>\n"
"        <meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/>\n"
"        <meta name=\"date\" content=\"<%pubdate_str%>\"/>\n"
"        <meta name=\"title\" content=\"<%title%>\"/>\n"
"        <meta name=\"url\" content=\"<%link%>\"/>\n"
"    </head>\n"
"\n"
"    <body>\n"
"        <a class=\"ulink\" href=\"<%link%>\"><%title%></a> (<%feed_name%>, <%author%>)\n"
"        <p>\n"
"        <%pubdate_str%>\n"
"        </p>\n"
"\n"
"        <p>\n"
"        <%category%>\n"
"        </p>\n"
"\n"
"        <p>\n"
"        <%desc%>\n"
"        </p>\n"
"        <p>\n"
"        <%title%>\n"
"        </p>\n"
"\n"
"    </body>\n"
"</html>\n"
"<!!!--------------------------------------------- doc section for splitting\n"
"\n"
msgstr ""

#: feedex_entry.py:68 feedex_entry.py:79 feedex_entry.py:90
#: feedex_entry.py:410
msgid "Entry %a not found!"
msgstr ""

#: feedex_entry.py:121
msgid "Nothing to open. Aborting..."
msgstr ""

#: feedex_entry.py:148
msgid "Opening in browser (%a) ..."
msgstr ""

#: feedex_entry.py:156
msgid "Reindexing and learning keywords..."
msgstr ""

#: feedex_entry.py:157
msgid "Reindexing ..."
msgstr ""

#: feedex_entry.py:162
msgid "Keywords learned"
msgstr ""

#: feedex_entry.py:166
msgid "Error reloading rules after successfull open: %a"
msgstr ""

#: feedex_entry.py:180 feedex_rule.py:90
msgid "Flag not found!"
msgstr ""

#: feedex_entry.py:183 feedex_rule.py:321
msgid "Invalid type for field %a"
msgstr ""

#: feedex_entry.py:187 feedex_entry.py:193 feedex_entry.py:199
msgid "Channel or Category %a not found!"
msgstr ""

#: feedex_entry.py:205 feedex_feed.py:331 feedex_feed.py:415
#: feedex_feed.py:423 feedex_rule.py:115
msgid "Category %a not found!"
msgstr ""

#: feedex_entry.py:212
msgid "Every entry needs to be assigned to a Channel or a Category!"
msgstr ""

#: feedex_entry.py:213 feedex_feed.py:320 feedex_rule.py:106
msgid "Channel %a not found!"
msgstr ""

#: feedex_entry.py:219
msgid "Not a valid url! (%a)"
msgstr ""

#: feedex_entry.py:221 feedex_feed.py:429
msgid "Deleted flag must be 0 or 1!"
msgstr ""

#: feedex_entry.py:223
msgid "Note marker must be 0 or 1!"
msgstr ""

#: feedex_entry.py:226
msgid "Invalid published date string (pubdate_str)!"
msgstr ""

#: feedex_entry.py:231
msgid "Invalid adding date string (%a)!"
msgstr ""

#: feedex_entry.py:246 feedex_feed.py:239 feedex_feed.py:440
#: feedex_feed.py:749 feedex_rule.py:186 feedex_rule.py:448
msgid "Nothing to do"
msgstr ""

#: feedex_entry.py:249 feedex_entry.py:382 feedex_entry.py:403
#: feedex_feed.py:441 feedex_feed.py:540 feedex_feed.py:554 feedex_rule.py:187
#: feedex_rule.py:235 feedex_rule.py:249 feedex_rule.py:449 feedex_rule.py:504
#: feedex_rule.py:518
msgid "Nothing to do. Aborting..."
msgstr ""

#: feedex_entry.py:285
msgid "Recalculating statistics ..."
msgstr ""

#: feedex_entry.py:286 feedex_entry.py:510
msgid "Extracting and learning keywords ..."
msgstr ""

#: feedex_entry.py:291
msgid "Error processing linguistic data: %a"
msgstr ""

#: feedex_entry.py:318 feedex_feed.py:475 feedex_rule.py:210
msgid "Error reloading rules after successfull update: %a"
msgstr ""

#: feedex_entry.py:323 feedex_feed.py:473
msgid "Error updating DB stats after successfull update: %a"
msgstr ""

#: feedex_entry.py:328
msgid "Entry %a updated successfuly!"
msgstr ""

#: feedex_entry.py:333 feedex_entry.py:336
msgid "Entry %a marked as read"
msgstr ""

#: feedex_entry.py:339
msgid "Entry %a marked as unread"
msgstr ""

#: feedex_entry.py:342
msgid "Entry %a unflagged"
msgstr ""

#: feedex_entry.py:345
msgid "Entry %a flagged"
msgstr ""

#: feedex_entry.py:348
msgid "Entry %a restored"
msgstr ""

#: feedex_entry.py:351
msgid "Entry %a marked as news item"
msgstr ""

#: feedex_entry.py:354
msgid "Entry %a marked as a user's Note"
msgstr ""

#: feedex_entry.py:360
msgid "Entry %a unassigned from node"
msgstr ""

#: feedex_entry.py:428 feedex_feed.py:563
msgid "Index error: %a"
msgstr ""

#: feedex_entry.py:440 feedex_rule.py:257
msgid "Error reloading rules after successfull delete: %a"
msgstr ""

#: feedex_entry.py:442 feedex_feed.py:592
msgid "Error updating DB stats after successfull delete: %a"
msgstr ""

#: feedex_entry.py:448
msgid "Entry %a deleted permanently with rules"
msgstr ""

#: feedex_entry.py:452
msgid "Entry %a deleted"
msgstr ""

#: feedex_entry.py:454 feedex_feed.py:529 feedex_feed.py:531
#: feedex_feed.py:608 feedex_rule.py:223 feedex_rule.py:226 feedex_rule.py:493
#: feedex_rule.py:496
msgid "Nothing done"
msgstr ""

#: feedex_entry.py:513
msgid "Error saving keywords: %a"
msgstr ""

#: feedex_entry.py:516
msgid "Keywords learned for entry %a"
msgstr ""

#: feedex_entry.py:521 feedex_rule.py:295
msgid "Error reloading rules after successfull add: %a"
msgstr ""

#: feedex_entry.py:524
msgid "Error updating DB stats after successfull add: %a"
msgstr ""

#: feedex_entry.py:526
msgid "Entry %a added as News item"
msgstr ""

#: feedex_entry.py:527
msgid "Entry %a added as a Note"
msgstr ""

#: feedex_feed.py:56
msgid "Field name of an SQL container must be a str!"
msgstr ""

#: feedex_feed.py:139
msgid "Filter must be a list or a tuple!"
msgstr ""

#: feedex_feed.py:202
msgid "Interface should be an instance of Feeder class!"
msgstr ""

#: feedex_feed.py:232
msgid "Editting field %a is not permitted!"
msgstr ""

#: feedex_feed.py:251
msgid "No changes detected"
msgstr ""

#: feedex_feed.py:345 feedex_rule.py:124 feedex_rule.py:133 feedex_rule.py:325
msgid "Channel/Category %a not found!"
msgstr ""

#: feedex_feed.py:353
msgid "Nothing to open!"
msgstr ""

#: feedex_feed.py:354
msgid "Cannot open a category!"
msgstr ""

#: feedex_feed.py:358
msgid "Empty URL!"
msgstr ""

#: feedex_feed.py:360
msgid "Sent to browser (%a)"
msgstr ""

#: feedex_feed.py:360 feedex_rule.py:30 feedex_rule.py:106 feedex_rule.py:115
#: feedex_rule.py:124 feedex_rule.py:133 feedex_rule.py:391
msgid "<UNKNOWN>"
msgstr ""

#: feedex_feed.py:389 feedex_feed.py:390
msgid "Nested categories are not allowed!"
msgstr ""

#: feedex_feed.py:392 feedex_feed.py:393
msgid "Not a valid URL! (%a)"
msgstr ""

#: feedex_feed.py:402
msgid "Invalid handler! Must be rss, html, script or local"
msgstr ""

#: feedex_feed.py:403
msgid "Interval must be >= 0!"
msgstr ""

#: feedex_feed.py:404
msgid "Autoupdate flag must be 0 or 1!"
msgstr ""

#: feedex_feed.py:405
msgid "Fetch flag must be 0 or 1!"
msgstr ""

#: feedex_feed.py:408
msgid "Invalid authentication method (must be NONE, detect, basic or digest)"
msgstr ""

#: feedex_feed.py:409
msgid "Password must be provided!"
msgstr ""

#: feedex_feed.py:410
msgid "Login must be provided!"
msgstr ""

#: feedex_feed.py:469
msgid "Error reloading Feeds after successfull update: %a"
msgstr ""

#: feedex_feed.py:477 feedex_feed.py:595 feedex_feed.py:643
#: feedex_gui_tabs.py:283 feedex_headers.py:363
msgid "Category"
msgstr ""

#: feedex_feed.py:478 feedex_feed.py:596 feedex_feed.py:644
msgid "Channel"
msgstr ""

#: feedex_feed.py:507
msgid "Fetching disabled for %a"
msgstr ""

#: feedex_feed.py:510
msgid "Fetching enabled for %a"
msgstr ""

#: feedex_feed.py:515
msgid "Authentication method changed for %a"
msgstr ""

#: feedex_feed.py:518
msgid "Password changed for %a"
msgstr ""

#: feedex_feed.py:521
msgid "Login changed for %a"
msgstr ""

#: feedex_feed.py:524
msgid "Domain (auth) changed for %a"
msgstr ""

#: feedex_feed.py:589
msgid "Error reloading data after successfull delete: %a"
msgstr ""

#: feedex_feed.py:641
msgid "Error reloading Feeds after successfull add: %a"
msgstr ""

#: feedex_feed.py:678
msgid "Channel with this URL already exists (%a)"
msgstr ""

#: feedex_feed.py:692
msgid "Error while reloading Feeds for fetching: %a"
msgstr ""

#: feedex_feed.py:706
msgid "DB error while updating feed list order: %a"
msgstr ""

#: feedex_feed.py:714
msgid "Target by id %a not found"
msgstr ""

#: feedex_feed.py:715
msgid "Channel/Category %a not found"
msgstr ""

#: feedex_feed.py:728 feedex_feed.py:733
msgid "Error insering Channel/Category: %a"
msgstr ""

#: feedex_feed.py:753
msgid "Error reloading Feeds after successfull operation: %a"
msgstr ""

#: feedex_feed.py:755
msgid "Display order changed successfully..."
msgstr ""

#: feedex_gui_dialogs_entts.py:17
msgid "Add Channel from URL"
msgstr ""

#: feedex_gui_dialogs_entts.py:25
msgid ""
"Choose Category to assign this Channel to\n"
"Categories are useful for quick filtering and organizing Channels"
msgstr ""

#: feedex_gui_dialogs_entts.py:31
msgid "Add"
msgstr ""

#: feedex_gui_dialogs_entts.py:32 feedex_gui_dialogs_entts.py:114
#: feedex_gui_dialogs_entts.py:295 feedex_gui_dialogs_entts.py:495
#: feedex_gui_dialogs_entts.py:646 feedex_gui_dialogs_entts.py:911
#: feedex_gui_dialogs_entts.py:1296 feedex_gui_dialogs_utils.py:354
#: feedex_gui_dialogs_utils.py:631
msgid "Cancel"
msgstr ""

#: feedex_gui_dialogs_entts.py:61 feedex_gui_dialogs_entts.py:63
msgid "Enter Channel's <b>URL</b> here"
msgstr ""

#: feedex_gui_dialogs_entts.py:94
msgid "Add New Category"
msgstr ""

#: feedex_gui_dialogs_entts.py:102 feedex_gui_dialogs_entts.py:475
#: feedex_gui_dialogs_entts.py:614 feedex_gui_dialogs_entts.py:1209
msgid "Name:"
msgstr ""

#: feedex_gui_dialogs_entts.py:103 feedex_gui_dialogs_entts.py:1217
msgid "Subtitle:"
msgstr ""

#: feedex_gui_dialogs_entts.py:105
msgid "Enter Category name here"
msgstr ""

#: feedex_gui_dialogs_entts.py:107
msgid "Enter subtitle/description name here"
msgstr ""

#: feedex_gui_dialogs_entts.py:109 feedex_gui_dialogs_entts.py:1286
msgid "Icon:"
msgstr ""

#: feedex_gui_dialogs_entts.py:110
msgid "Choose icon for this Category"
msgstr ""

#: feedex_gui_dialogs_entts.py:111 feedex_gui_dialogs_entts.py:1288
msgid "Search local machine for icons"
msgstr ""

#: feedex_gui_dialogs_entts.py:113 feedex_gui_dialogs_entts.py:494
#: feedex_gui_dialogs_entts.py:645 feedex_gui_dialogs_entts.py:1295
#: feedex_gui_dialogs_utils.py:630
msgid "Save"
msgstr ""

#: feedex_gui_dialogs_entts.py:115 feedex_gui_dialogs_entts.py:219
#: feedex_gui_dialogs_entts.py:496 feedex_gui_dialogs_entts.py:647
#: feedex_gui_dialogs_entts.py:912 feedex_gui_dialogs_entts.py:1297
#: feedex_gui_dialogs_utils.py:632 feedex_gui_main.py:481
msgid "Restore"
msgstr ""

#: feedex_gui_dialogs_entts.py:168 feedex_gui_dialogs_entts.py:1399
msgid "Choose file"
msgstr ""

#: feedex_gui_dialogs_entts.py:185 feedex_gui_dialogs_entts.py:1427
msgid "Choose Image"
msgstr ""

#: feedex_gui_dialogs_entts.py:215 feedex_gui_main.py:180
msgid "Add new Entry"
msgstr ""

#: feedex_gui_dialogs_entts.py:216
msgid "Clear"
msgstr ""

#: feedex_gui_dialogs_entts.py:218 feedex_gui_main.py:477
msgid "Edit Entry"
msgstr ""

#: feedex_gui_dialogs_entts.py:234
msgid ""
"Choose <b>Category</b> or <b>Channel</b> to assign this Entry to.\n"
"It is a good idea to have categories exclusively for manually added entries for quick access to notes, hilights etc.\n"
"<i>Every Entry needs to be assigned to a Category or a Channel</i>"
msgstr ""

#: feedex_gui_dialogs_entts.py:238
msgid "How should this entry be classified?"
msgstr ""

#: feedex_gui_dialogs_entts.py:242
msgid "Enter Entry's title here"
msgstr ""

#: feedex_gui_dialogs_entts.py:277
msgid "Enter Entry's details/description here"
msgstr ""

#: feedex_gui_dialogs_entts.py:285
msgid "Enter additional text here"
msgstr ""

#: feedex_gui_dialogs_entts.py:289
msgid "Learn rules?"
msgstr ""

#: feedex_gui_dialogs_entts.py:290
msgid ""
"Should Feedex extract Rules from this entry for ranking incomming entries by importance?\n"
"See <b>Rules</b>->Right-Click-><b>Show learned rules</b> to see those and weights assigned to them\n"
"Rules are also learned automatically when any Entry/Article is opened in Browser"
msgstr ""

#: feedex_gui_dialogs_entts.py:294
msgid "  Save  "
msgstr ""

#: feedex_gui_dialogs_entts.py:456
msgid "Add new Flag"
msgstr ""

#: feedex_gui_dialogs_entts.py:457 feedex_gui_main.py:595
msgid "Edit Flag"
msgstr ""

#: feedex_gui_dialogs_entts.py:477
msgid "Display name for this Flag used in Queries etc."
msgstr ""

#: feedex_gui_dialogs_entts.py:481
msgid "Color:"
msgstr ""

#: feedex_gui_dialogs_entts.py:485
msgid "Color (CLI):"
msgstr ""

#: feedex_gui_dialogs_entts.py:488
msgid "ID:"
msgstr ""

#: feedex_gui_dialogs_entts.py:490
msgid "Sometimes it is useful to set up ID manually e.g. to add description to flag deleted before"
msgstr ""

#: feedex_gui_dialogs_entts.py:595 feedex_gui_main.py:181
msgid "Add new Rule"
msgstr ""

#: feedex_gui_dialogs_entts.py:596 feedex_gui_main.py:549
msgid "Edit Rule"
msgstr ""

#: feedex_gui_dialogs_entts.py:616
msgid "Display name for this rule (<i>not used in matching</i>)"
msgstr ""

#: feedex_gui_dialogs_entts.py:617
msgid "Search string:"
msgstr ""

#: feedex_gui_dialogs_entts.py:619
msgid ""
"String or Pattern used for search and matching\n"
"It is used according to <b>Type</b> and should be compatibile with it (e.g. REGEX string)"
msgstr ""

#: feedex_gui_dialogs_entts.py:622
msgid "Type:"
msgstr ""

#: feedex_gui_dialogs_entts.py:624
msgid "Channel or Category:"
msgstr ""

#: feedex_gui_dialogs_entts.py:625
msgid "-- Every Feed --"
msgstr ""

#: feedex_gui_dialogs_entts.py:625
msgid "Which Feed/Channel should this Rule filter?"
msgstr ""

#: feedex_gui_dialogs_entts.py:626
msgid "Field:"
msgstr ""

#: feedex_gui_dialogs_entts.py:628 feedex_gui_dialogs_utils.py:538
msgid "Language:"
msgstr ""

#: feedex_gui_dialogs_entts.py:629
msgid "Which language should this rule use for Full Text Search?"
msgstr ""

#: feedex_gui_dialogs_entts.py:630
msgid "Case:"
msgstr ""

#: feedex_gui_dialogs_entts.py:631
msgid "Should this Rule be case sensitive?"
msgstr ""

#: feedex_gui_dialogs_entts.py:631 feedex_gui_tabs.py:183
msgid "Case insensitive"
msgstr ""

#: feedex_gui_dialogs_entts.py:631 feedex_gui_tabs.py:183
msgid "Case sensitive"
msgstr ""

#: feedex_gui_dialogs_entts.py:633
msgid "Weight:"
msgstr ""

#: feedex_gui_dialogs_entts.py:635
msgid ""
"Weight is used to increase article's <b>importance</b> when matched\n"
"Articles are then sorted by importance to keep the most important ones on top.\n"
"Weights from leaned rules as well as the ones from manually added ones sum up and position an Article"
msgstr ""

#: feedex_gui_dialogs_entts.py:639
msgid ""
"Main reason for manually added rules is to flag interesting incomming articles independently of importance ranking\n"
"Sometimes, however, a rule can simply increase importance by its <b>weight</b> without flagging"
msgstr ""

#: feedex_gui_dialogs_entts.py:641
msgid "Are matches weights additive?"
msgstr ""

#: feedex_gui_dialogs_entts.py:781
msgid "Custom REGEX string for resource link extraction"
msgstr ""

#: feedex_gui_dialogs_entts.py:785
msgid "REGEX strings for HTML parsing"
msgstr ""

#: feedex_gui_dialogs_entts.py:796
msgid "This REGEX will extract links to images from Description and Contents instead of builtin"
msgstr ""

#: feedex_gui_dialogs_entts.py:799
msgid "This REGEX will extract additional links to resources from Description and Contents instead of builtin"
msgstr ""

#: feedex_gui_dialogs_entts.py:816
msgid ""
"This REGEX should extract list of strings for Entries to be parsed by entry-specific REGEXes\n"
"Parsing will be done match by match with each REGEX below"
msgstr ""

#: feedex_gui_dialogs_entts.py:819 feedex_gui_dialogs_entts.py:1213
msgid "Title:"
msgstr ""

#: feedex_gui_dialogs_entts.py:821
msgid "Link:"
msgstr ""

#: feedex_gui_dialogs_entts.py:823
msgid "Link to entry. If exctracted link is a relative URL, i.e. it starts with a '/' symbol, Channel's homepage will be prepended to it automatically"
msgstr ""

#: feedex_gui_dialogs_entts.py:824
msgid "Description:"
msgstr ""

#: feedex_gui_dialogs_entts.py:826 feedex_gui_dialogs_entts.py:1239
msgid "Author:"
msgstr ""

#: feedex_gui_dialogs_entts.py:828 feedex_gui_dialogs_entts.py:1254
msgid "Category:"
msgstr ""

#: feedex_gui_dialogs_entts.py:830
msgid "Additional Text:"
msgstr ""

#: feedex_gui_dialogs_entts.py:832
msgid "Images:"
msgstr ""

#: feedex_gui_dialogs_entts.py:834
msgid "Published Date:"
msgstr ""

#: feedex_gui_dialogs_entts.py:837
msgid "Feed's Title:"
msgstr ""

#: feedex_gui_dialogs_entts.py:839
msgid "Feed's: Published Date:"
msgstr ""

#: feedex_gui_dialogs_entts.py:841
msgid "Feed's Image:"
msgstr ""

#: feedex_gui_dialogs_entts.py:843
msgid "Feed's Encoding:"
msgstr ""

#: feedex_gui_dialogs_entts.py:845
msgid "Feed's Language:"
msgstr ""

#: feedex_gui_dialogs_entts.py:901 feedex_gui_feeds.py:317
#: feedex_gui_utils.py:505
msgid "HTML"
msgstr ""

#: feedex_gui_dialogs_entts.py:902
msgid "Parsing Preview"
msgstr ""

#: feedex_gui_dialogs_entts.py:904
msgid "Load REGEXes from other Chanel"
msgstr ""

#: feedex_gui_dialogs_entts.py:904
msgid "Load from..."
msgstr ""

#: feedex_gui_dialogs_entts.py:910 feedex_gui_dialogs_utils.py:353
msgid "Accept"
msgstr ""

#: feedex_gui_dialogs_entts.py:914
msgid "Download resource and test your search string"
msgstr ""

#: feedex_gui_dialogs_entts.py:914
msgid "Test REGEXes"
msgstr ""

#: feedex_gui_dialogs_entts.py:966
msgid "Link URL is empty. Cannot download resource"
msgstr ""

#: feedex_gui_dialogs_entts.py:1197
msgid "Add new Feed"
msgstr ""

#: feedex_gui_dialogs_entts.py:1204
msgid ""
"Choose <b>Category</b> to assign this Feed to\n"
"Categories are useful for bulk-filtering and general organizing"
msgstr ""

#: feedex_gui_dialogs_entts.py:1211
msgid "Display name for this Channel"
msgstr ""

#: feedex_gui_dialogs_entts.py:1215
msgid "This is a title given by publisher and downloaded from Feed's page"
msgstr ""

#: feedex_gui_dialogs_entts.py:1220
msgid "URL:"
msgstr ""

#: feedex_gui_dialogs_entts.py:1223
msgid "Homepage:"
msgstr ""

#: feedex_gui_dialogs_entts.py:1225
msgid "URL to Channel's Homepage"
msgstr ""

#: feedex_gui_dialogs_entts.py:1227
msgid "Autoupdate metadata?"
msgstr ""

#: feedex_gui_dialogs_entts.py:1231
msgid "Fetch News?"
msgstr ""

#: feedex_gui_dialogs_entts.py:1232
msgid "If disabled, Channel's news will not be fetched unless manually requested"
msgstr ""

#: feedex_gui_dialogs_entts.py:1235
msgid "Fetch interval:"
msgstr ""

#: feedex_gui_dialogs_entts.py:1237
msgid "Set news checking/fetching interval for this Channel"
msgstr ""

#: feedex_gui_dialogs_entts.py:1242
msgid "Author contact:"
msgstr ""

#: feedex_gui_dialogs_entts.py:1245
msgid "Publisher:"
msgstr ""

#: feedex_gui_dialogs_entts.py:1248
msgid "Publisher contact:"
msgstr ""

#: feedex_gui_dialogs_entts.py:1251
msgid "Contributors:"
msgstr ""

#: feedex_gui_dialogs_entts.py:1257
msgid "Tags:"
msgstr ""

#: feedex_gui_dialogs_entts.py:1262
msgid "Domain:"
msgstr ""

#: feedex_gui_dialogs_entts.py:1264
msgid "Domain used in authentication process"
msgstr ""

#: feedex_gui_dialogs_entts.py:1266
msgid "Login:"
msgstr ""

#: feedex_gui_dialogs_entts.py:1268
msgid "Login used in authentication process"
msgstr ""

#: feedex_gui_dialogs_entts.py:1270
msgid "Password:"
msgstr ""

#: feedex_gui_dialogs_entts.py:1273
msgid "Password used in authentication process"
msgstr ""

#: feedex_gui_dialogs_entts.py:1276
msgid "Custom User Agent:"
msgstr ""

#: feedex_gui_dialogs_entts.py:1279
msgid "Fetching script:"
msgstr ""

#: feedex_gui_dialogs_entts.py:1281
msgid ""
"Script/command to be executed to fetch entries for this Channel. \n"
"This script should return a <b>JSON string</b>\n"
"See <b><i>feedex --help-scripting</i></b> for detailed specification"
msgstr ""

#: feedex_gui_dialogs_entts.py:1284
msgid "Search local machine for script file"
msgstr ""

#: feedex_gui_dialogs_entts.py:1290
msgid "Define <b>REGEX strings</b> for <b>HTML</b> parsing"
msgstr ""

#: feedex_gui_dialogs_entts.py:1418
msgid "Choose Script File"
msgstr ""

#: feedex_gui_dialogs_entts.py:1438
msgid "Valid <b>URL</b> to Channel"
msgstr ""

#: feedex_gui_dialogs_entts.py:1440
msgid ""
"Valid <b>URL</b> to WWW page to be parsed. \n"
"For HTML parsing it is good to use Webpages with as little JavaScript as possible"
msgstr ""

#: feedex_gui_dialogs_entts.py:1443
msgid ""
"For <b>local</b> and <b>script</b> feeds this can be any string, as it is not used\n"
"Local feeds are updated only by scripts or CLI (<i>--add-entry</i>, <i>--add-entries-from-file</i>, or <i>--add-entries-from-pipe</i> options)\n"
"Scripted feeds are updated by script defined below during fetching"
msgstr ""

#: feedex_gui_dialogs_utils.py:44
msgid "Close"
msgstr ""

#: feedex_gui_dialogs_utils.py:85
msgid "Yes"
msgstr ""

#: feedex_gui_dialogs_utils.py:86
msgid "No"
msgstr ""

#: feedex_gui_dialogs_utils.py:125
msgid "Learned Rules"
msgstr ""

#: feedex_gui_dialogs_utils.py:145 feedex_gui_dialogs_utils.py:1117
#: feedex_gui_tabs.py:426 feedex_gui_tabs.py:453
msgid "Name"
msgstr ""

#: feedex_gui_dialogs_utils.py:146
msgid "Match string"
msgstr ""

#: feedex_gui_dialogs_utils.py:147 feedex_gui_dialogs_utils.py:1063
#: feedex_gui_dialogs_utils.py:1126 feedex_gui_tabs.py:290
#: feedex_gui_tabs.py:366 feedex_gui_tabs.py:393 feedex_gui_tabs.py:428
msgid "Weight"
msgstr ""

#: feedex_gui_dialogs_utils.py:148 feedex_gui_dialogs_utils.py:1130
msgid "Context ID"
msgstr ""

#: feedex_gui_dialogs_utils.py:151
msgid ""
"List of Rules learned after <b>adding Entries</b> and <b>reading Articles</b>\n"
"<b>Name</b> - Displayed name, <i>not matched</i>, purely informational\n"
"<b>Match string</b> - String matched against tokenized Entry with prefixes\n"
"<b>Weight</b> - Weight added to Entry when the rule is matched (rule weights are offset by Entry weight to avoid overvaluing very long articles\n"
"<b>Context ID</b> - ID of the Entry the rule was extracted from\n"
"Hit <b>Ctrl-F</b> for interactive search"
msgstr ""

#: feedex_gui_dialogs_utils.py:163 feedex_gui_dialogs_utils.py:1073
#: feedex_gui_dialogs_utils.py:1140
msgid "Done"
msgstr ""

#: feedex_gui_dialogs_utils.py:164
msgid "Delete all"
msgstr ""

#: feedex_gui_dialogs_utils.py:165
msgid ""
"Delete <b>All</b> learned rules\n"
"<i>This process is PERMANENT</i>\n"
"Rules can be relearned for all read entries by CLI command:\n"
"<i>feedex --relearn</i>"
msgstr ""

#: feedex_gui_dialogs_utils.py:182
msgid "Are you sure you want to clear <b>all leraned rules</b>?"
msgstr ""

#: feedex_gui_dialogs_utils.py:182 feedex_gui_dialogs_utils.py:186
msgid "Clear All Learned Rules?"
msgstr ""

#: feedex_gui_dialogs_utils.py:186
msgid "Are you <b>really sure</b>?"
msgstr ""

#: feedex_gui_dialogs_utils.py:254
msgid "  Done  "
msgstr ""

#: feedex_gui_dialogs_utils.py:283
msgid "About FEEDEX"
msgstr ""

#: feedex_gui_dialogs_utils.py:297
msgid "   Close   "
msgstr ""

#: feedex_gui_dialogs_utils.py:341
msgid "Choose date range"
msgstr ""

#: feedex_gui_dialogs_utils.py:345
msgid "  From:"
msgstr ""

#: feedex_gui_dialogs_utils.py:346
msgid "    To:"
msgstr ""

#: feedex_gui_dialogs_utils.py:348 feedex_gui_dialogs_utils.py:350
msgid "Empty"
msgstr ""

#: feedex_gui_dialogs_utils.py:445
msgid "FEEDEX Preferences"
msgstr ""

#: feedex_gui_dialogs_utils.py:456
msgid "Enable desktop notifications?"
msgstr ""

#: feedex_gui_dialogs_utils.py:458
msgid "Should Feedex send desktop notifications on incomming news?"
msgstr ""

#: feedex_gui_dialogs_utils.py:459
msgid "Fetch news in the background?"
msgstr ""

#: feedex_gui_dialogs_utils.py:460
msgid "News will be checked in background and downloaded if Channels's fetching interval is exceeded"
msgstr ""

#: feedex_gui_dialogs_utils.py:462
msgid "Default check interval:"
msgstr ""

#: feedex_gui_dialogs_utils.py:464
msgid "Default fetching interval for newly added feeds"
msgstr ""

#: feedex_gui_dialogs_utils.py:466
msgid "Ranking rules limit:"
msgstr ""

#: feedex_gui_dialogs_utils.py:468
msgid ""
"When ranking incomming news you can \n"
"limit the number of rules to match.\n"
"Only those with N top weight will be checked.\n"
"This can help avoid unimportant terms influencing ranking\n"
"and prevent scaling problems for large datasets\n"
"Enter <b>0</b> for <b>no rule limit</b> (every rule will be checked)"
msgstr ""

#: feedex_gui_dialogs_utils.py:475
msgid "Enable Keyword learning?"
msgstr ""

#: feedex_gui_dialogs_utils.py:476
msgid ""
"If enabled, keywords are extracted and learned \n"
"every time an article is read or marked as read.\n"
"Incomming news are then ranked agains the rules from those extracted keywords.\n"
"Feedex uses this ranking to get articles most likely interesting to you on top.\n"
"If disabled, no learning will take place and ranking will be done only against rules\n"
"that were manually added by user."
msgstr ""

#: feedex_gui_dialogs_utils.py:484
msgid ""
"Should incoming news be grouped? How?\n"
"<b>No grouping</b> - all results will be pushed\n"
"<b>Just number</b> - just a notification about the number of new articles"
msgstr ""

#: feedex_gui_dialogs_utils.py:488
msgid ""
"How many results should be shown for each grouping?\n"
"If no grouping is selected, it will simply show top results"
msgstr ""

#: feedex_gui_dialogs_utils.py:491
msgid "New Entry default weight:"
msgstr ""

#: feedex_gui_dialogs_utils.py:493
msgid "Default weight for manually added Entries for rule learning"
msgstr ""

#: feedex_gui_dialogs_utils.py:495
msgid "Learn from added Entries?"
msgstr ""

#: feedex_gui_dialogs_utils.py:496
msgid ""
"Should Feedex learn rules/keywords from manually added entries?\n"
"Useful for utilizing highlights and notes for news ranking"
msgstr ""

#: feedex_gui_dialogs_utils.py:498
msgid "Rule default weight:"
msgstr ""

#: feedex_gui_dialogs_utils.py:500
msgid "Default weight assigned to manually added rule (if not provided)"
msgstr ""

#: feedex_gui_dialogs_utils.py:502
msgid "Weight for similarity search:"
msgstr ""

#: feedex_gui_dialogs_utils.py:504
msgid "How much weight for ranking should items for which similar ones are searched for be given. Zero to disable"
msgstr ""

#: feedex_gui_dialogs_utils.py:506
msgid "Added entry color:"
msgstr ""

#: feedex_gui_dialogs_utils.py:510
msgid "Deleted color:"
msgstr ""

#: feedex_gui_dialogs_utils.py:514
msgid "Search hilight color:"
msgstr ""

#: feedex_gui_dialogs_utils.py:518
msgid "Default flag color:"
msgstr ""

#: feedex_gui_dialogs_utils.py:523
msgid "Hotkey, open new Search Tab: Ctrl + "
msgstr ""

#: feedex_gui_dialogs_utils.py:526
msgid "Hotkey, add New Entry: Ctrl + "
msgstr ""

#: feedex_gui_dialogs_utils.py:529
msgid "Hotkey, add New Rule: Ctrl + "
msgstr ""

#: feedex_gui_dialogs_utils.py:532
msgid "Layout:"
msgstr ""

#: feedex_gui_dialogs_utils.py:533
msgid "How main window panes should be displayed? Requires restart"
msgstr ""

#: feedex_gui_dialogs_utils.py:535
msgid "Orientation:"
msgstr ""

#: feedex_gui_dialogs_utils.py:536
msgid "Pane horizontal sequence"
msgstr ""

#: feedex_gui_dialogs_utils.py:541
msgid "Startup Page(s):"
msgstr ""

#: feedex_gui_dialogs_utils.py:542
msgid "This option will open (or not) a summary page on startup"
msgstr ""

#: feedex_gui_dialogs_utils.py:544
msgid "Ignore Images?"
msgstr ""

#: feedex_gui_dialogs_utils.py:545
msgid "Should images and icons be ignored alltogether? Ueful for better performance"
msgstr ""

#: feedex_gui_dialogs_utils.py:547
msgid "Ignore Audio/Video?"
msgstr ""

#: feedex_gui_dialogs_utils.py:548
msgid "Should audio/video streaming be ignored alltogether? Ueful for better performance"
msgstr ""

#: feedex_gui_dialogs_utils.py:551
msgid "Default WWW browser:"
msgstr ""

#: feedex_gui_dialogs_utils.py:553
msgid "Command for opening in browser. Use <b>u%</b> symbol to substitute for URL"
msgstr ""

#: feedex_gui_dialogs_utils.py:554 feedex_gui_dialogs_utils.py:556
#: feedex_gui_dialogs_utils.py:561
msgid "Choose from installed applications"
msgstr ""

#: feedex_gui_dialogs_utils.py:557
msgid "External image viewer:"
msgstr ""

#: feedex_gui_dialogs_utils.py:559
msgid ""
"Command for viewing images by clicking on them.\n"
"Use <b>%u</b> symbol to substitute for temp filename\n"
"<b>%t</b> symbol will be replaced by <b>title</b>\n"
"<b>%a</b> symbol will be replaced by <b>alt</b> field"
msgstr ""

#: feedex_gui_dialogs_utils.py:562
msgid "External text file viewer:"
msgstr ""

#: feedex_gui_dialogs_utils.py:564
msgid ""
"Command for viewing text files.\n"
"Use <b>%u</b> symbol to substitute for temp filename"
msgstr ""

#: feedex_gui_dialogs_utils.py:566
msgid "Default WWW search engine:"
msgstr ""

#: feedex_gui_dialogs_utils.py:570
msgid "Similarity query limit:"
msgstr ""

#: feedex_gui_dialogs_utils.py:572
msgid "Limit similarity query items for improved query performance"
msgstr ""

#: feedex_gui_dialogs_utils.py:574
msgid "Max context length:"
msgstr ""

#: feedex_gui_dialogs_utils.py:576
msgid "If the length of a context/snippet is greater than this number, it will not be shown in query results. Needed to avoid long snippets for wildcard searches"
msgstr ""

#: feedex_gui_dialogs_utils.py:578
msgid "Default grouping depth:"
msgstr ""

#: feedex_gui_dialogs_utils.py:580
msgid "How many results to show when grouping in a tree? If <b>0</b>, every result will be displayed"
msgstr ""

#: feedex_gui_dialogs_utils.py:583
msgid "Error threshold:"
msgstr ""

#: feedex_gui_dialogs_utils.py:585
msgid "After how many download errors should a Channel be marked as unhealthy and ignored while fetching?"
msgstr ""

#: feedex_gui_dialogs_utils.py:587
msgid "Ignore modified Tags?"
msgstr ""

#: feedex_gui_dialogs_utils.py:588
msgid "Should ETags and Modified fields be ignored while fetching? If yes, Feedex will fetch news even when publisher suggest not to (e.g. no changes where made to feed)"
msgstr ""

#: feedex_gui_dialogs_utils.py:590
msgid "Clear cached files older than how many days?"
msgstr ""

#: feedex_gui_dialogs_utils.py:592
msgid "Files in cache include thumbnails and images. It is good to keep them but older items should release space"
msgstr ""

#: feedex_gui_dialogs_utils.py:594
msgid "Database:"
msgstr ""

#: feedex_gui_dialogs_utils.py:595 feedex_gui_dialogs_utils.py:600
msgid "Search filesystem"
msgstr ""

#: feedex_gui_dialogs_utils.py:602
msgid "Path to log file"
msgstr ""

#: feedex_gui_dialogs_utils.py:604
msgid "User Agent:"
msgstr ""

#: feedex_gui_dialogs_utils.py:609
msgid "Exclude from Window Name:"
msgstr ""

#: feedex_gui_dialogs_utils.py:611
msgid ""
"These are comma-separated phrases to exclude when using window name with --clipboard option.\n"
"It will prevent littering database with Mozilla, Chrome, Safar headers when adding entries by a Hotkey script.        \n"
msgstr ""

#: feedex_gui_dialogs_utils.py:615
msgid "Redirect?"
msgstr ""

#: feedex_gui_dialogs_utils.py:616
msgid "Should HTTP redirects (codes:301, 302) be followed when fetching?"
msgstr ""

#: feedex_gui_dialogs_utils.py:618
msgid "Save permanent redirects?"
msgstr ""

#: feedex_gui_dialogs_utils.py:619
msgid "Should permanent HTTP redirects (code: 301) be saved to DB?"
msgstr ""

#: feedex_gui_dialogs_utils.py:621
msgid "Mark deleted channels as unhealthy?"
msgstr ""

#: feedex_gui_dialogs_utils.py:622
msgid "Should deleted channels (HTTP code 410) be marked as unhealthy to avoid fetching in the future?"
msgstr ""

#: feedex_gui_dialogs_utils.py:624
msgid "Do not save queries in History?"
msgstr ""

#: feedex_gui_dialogs_utils.py:625
msgid "Should saving search phrases to History be ommitted?"
msgstr ""

#: feedex_gui_dialogs_utils.py:630
msgid "Save configuration"
msgstr ""

#: feedex_gui_dialogs_utils.py:632
msgid "Restore preferences to defaults"
msgstr ""

#: feedex_gui_dialogs_utils.py:733
msgid "Interface"
msgstr ""

#: feedex_gui_dialogs_utils.py:734
msgid "Fetching"
msgstr ""

#: feedex_gui_dialogs_utils.py:735
msgid "Learning and Ranking"
msgstr ""

#: feedex_gui_dialogs_utils.py:736
msgid "System"
msgstr ""

#: feedex_gui_dialogs_utils.py:775
msgid "Choose Database"
msgstr ""

#: feedex_gui_dialogs_utils.py:780
msgid "Choose Log File"
msgstr ""

#: feedex_gui_dialogs_utils.py:806
msgid "Choose Default Browser"
msgstr ""

#: feedex_gui_dialogs_utils.py:809
msgid "Choose Image Viewer"
msgstr ""

#: feedex_gui_dialogs_utils.py:812
msgid "Choose Text File Viewer"
msgstr ""

#: feedex_gui_dialogs_utils.py:839 feedex_gui_dialogs_utils.py:860
#: feedex_gui_dialogs_utils.py:862 feedex_gui_dialogs_utils.py:867
#: feedex_gui_dialogs_utils.py:869 feedex_gui_dialogs_utils.py:871
#: feedex_gui_dialogs_utils.py:872 feedex_gui_dialogs_utils.py:903
#: feedex_gui_dialogs_utils.py:905 feedex_gui_dialogs_utils.py:907
#: feedex_gui_dialogs_utils.py:912 feedex_gui_dialogs_utils.py:913
#: feedex_gui_utils.py:880
msgid "<<ERROR>>"
msgstr ""

#: feedex_gui_dialogs_utils.py:1042
msgid "Keywords"
msgstr ""

#: feedex_gui_dialogs_utils.py:1062
msgid "Keyword"
msgstr ""

#: feedex_gui_dialogs_utils.py:1065
msgid ""
"Keywords extracted from entry\n"
"Hit <b>Ctrl-F</b> for interactive search"
msgstr ""

#: feedex_gui_dialogs_utils.py:1095
msgid "Matched Rules"
msgstr ""

#: feedex_gui_dialogs_utils.py:1118
msgid "String"
msgstr ""

#: feedex_gui_dialogs_utils.py:1119
msgid "Matched"
msgstr ""

#: feedex_gui_dialogs_utils.py:1120 feedex_gui_tabs.py:431
msgid "Learned?"
msgstr ""

#: feedex_gui_dialogs_utils.py:1121
msgid "Case insensitive?"
msgstr ""

#: feedex_gui_dialogs_utils.py:1122
msgid "Query type"
msgstr ""

#: feedex_gui_dialogs_utils.py:1123
msgid "Field"
msgstr ""

#: feedex_gui_dialogs_utils.py:1124
msgid "Feed/Category"
msgstr ""

#: feedex_gui_dialogs_utils.py:1125 feedex_headers.py:355
#: feedex_headers.py:504
msgid "Language"
msgstr ""

#: feedex_gui_dialogs_utils.py:1127 feedex_gui_tabs.py:288
#: feedex_gui_tabs.py:364
msgid "Flag ID"
msgstr ""

#: feedex_gui_dialogs_utils.py:1128
msgid "Flag name"
msgstr ""

#: feedex_gui_dialogs_utils.py:1129
msgid "Additive?"
msgstr ""

#: feedex_gui_dialogs_utils.py:1132
msgid ""
"Rules matched for this Entry\n"
"Hit <b>Ctrl-F</b> for interactive search"
msgstr ""

#: feedex_gui_downloader.py:111 feedex_gui_downloader.py:121
#: feedex_gui_downloader.py:137
msgid "Resource too large! Should be %a max"
msgstr ""

#: feedex_gui_feeds.py:58
msgid ""
"These are available <b>Places</b>, <b>Channels</b> and <b>Categories</b>\n"
"Double-click on a place to quickly load entries  \n"
"Double-click on feed or category to filter results by chosen item\n"
"Right click for more options\n"
"Hit <b>Ctrl-F</b> for interactive search"
msgstr ""

#: feedex_gui_feeds.py:108
msgid "%a selected for moving..."
msgstr ""

#: feedex_gui_feeds.py:245
msgid "New"
msgstr ""

#: feedex_gui_feeds.py:250
msgid "Previous Update"
msgstr ""

#: feedex_gui_feeds.py:255 feedex_gui_tabs.py:850 feedex_gui_utils.py:351
msgid "Last Hour"
msgstr ""

#: feedex_gui_feeds.py:265
msgid "This Week"
msgstr ""

#: feedex_gui_feeds.py:270
msgid "This Month"
msgstr ""

#: feedex_gui_feeds.py:275
msgid "This Quarter"
msgstr ""

#: feedex_gui_feeds.py:310 feedex_gui_utils.py:505
msgid "RSS"
msgstr ""

#: feedex_gui_feeds.py:324 feedex_gui_utils.py:505
msgid "Script"
msgstr ""

#: feedex_gui_feeds.py:331 feedex_gui_utils.py:508
msgid "Local"
msgstr ""

#: feedex_gui_feeds.py:343
msgid "Trash"
msgstr ""

#: feedex_gui_main.py:23
msgid "feedex_main_container should be an instance of FeedexMainDataContainer class!"
msgstr ""

#: feedex_gui_main.py:65
msgid "Feedex: Database is Locked"
msgstr ""

#: feedex_gui_main.py:66
msgid "Another instance can be performing operations on Database or Feedex did not close properly last time. Proceed anyway?"
msgstr ""

#: feedex_gui_main.py:78
msgid "Feedex: Database Error!"
msgstr ""

#: feedex_gui_main.py:78 feedex_gui_main.py:84
msgid "Application could not be started! I am sorry for inconvenience :("
msgstr ""

#: feedex_gui_main.py:84
msgid "Feedex: Database Index Error!"
msgstr ""

#: feedex_gui_main.py:138
msgid "Export Feed data to JSON"
msgstr ""

#: feedex_gui_main.py:139
msgid "Export Rules to JSON"
msgstr ""

#: feedex_gui_main.py:140
msgid "Export Flags to JSON"
msgstr ""

#: feedex_gui_main.py:144
msgid "Import Feed data from JSON"
msgstr ""

#: feedex_gui_main.py:145
msgid "Import Rules data from JSON"
msgstr ""

#: feedex_gui_main.py:146
msgid "Import Flags data from JSON"
msgstr ""

#: feedex_gui_main.py:148
msgid "Import Entries from JSON"
msgstr ""

#: feedex_gui_main.py:152
msgid ""
"Maintenance can improve performance for large databases by doing cleanup and reindexing.\n"
"It will also take some time to perform"
msgstr ""

#: feedex_gui_main.py:152
msgid "Maintenance..."
msgstr ""

#: feedex_gui_main.py:155
msgid "Clear cache"
msgstr ""

#: feedex_gui_main.py:155
msgid "Clear downloaded temporary files with images/thumbnails to reclaim disk space"
msgstr ""

#: feedex_gui_main.py:157
msgid "Database statistics"
msgstr ""

#: feedex_gui_main.py:162
msgid "Open a new tab showing Saved Rules"
msgstr ""

#: feedex_gui_main.py:162 feedex_gui_tabs.py:91
msgid "Rules"
msgstr ""

#: feedex_gui_main.py:163
msgid "Open a new tab showing Flags"
msgstr ""

#: feedex_gui_main.py:163 feedex_gui_tabs.py:93
msgid "Flags"
msgstr ""

#: feedex_gui_main.py:165
msgid "Preferences"
msgstr ""

#: feedex_gui_main.py:167
msgid "Export..."
msgstr ""

#: feedex_gui_main.py:168
msgid "Import..."
msgstr ""

#: feedex_gui_main.py:170
msgid "Database..."
msgstr ""

#: feedex_gui_main.py:172
msgid "View log"
msgstr ""

#: feedex_gui_main.py:174
msgid "About Feedex..."
msgstr ""

#: feedex_gui_main.py:179 feedex_gui_main.py:614
msgid "Add Channel"
msgstr ""

#: feedex_gui_main.py:180 feedex_gui_main.py:454
msgid "Add Entry"
msgstr ""

#: feedex_gui_main.py:181 feedex_gui_main.py:547
msgid "Add Rule"
msgstr ""

#: feedex_gui_main.py:185
msgid "Search entries grouping them in a tree summary"
msgstr ""

#: feedex_gui_main.py:185 feedex_gui_tabs.py:97
msgid "Summary"
msgstr ""

#: feedex_gui_main.py:186
msgid "Search entries"
msgstr ""

#: feedex_gui_main.py:186 feedex_gui_tabs.py:81
msgid "Search"
msgstr ""

#: feedex_gui_main.py:187
msgid "Search (wide view)"
msgstr ""

#: feedex_gui_main.py:187
msgid "Search entries in extended view"
msgstr ""

#: feedex_gui_main.py:190
msgid "Show trending Articles"
msgstr ""

#: feedex_gui_main.py:190 feedex_gui_tabs.py:103
msgid "Trending"
msgstr ""

#: feedex_gui_main.py:191
msgid "Show most talked about terms for Articles"
msgstr ""

#: feedex_gui_main.py:191 feedex_gui_tabs.py:101
msgid "Trends"
msgstr ""

#: feedex_gui_main.py:194
msgid "Search for Term Contexts"
msgstr ""

#: feedex_gui_main.py:194
msgid "Show Contexts for a Term"
msgstr ""

#: feedex_gui_main.py:195
msgid "Generate time series plot"
msgstr ""

#: feedex_gui_main.py:195
msgid "Show Time Series for a Term"
msgstr ""

#: feedex_gui_main.py:197
msgid "Search for Related Terms"
msgstr ""

#: feedex_gui_main.py:197
msgid "Search for Related Terms from read/opened entries"
msgstr ""

#: feedex_gui_main.py:212
msgid "Main Menu"
msgstr ""

#: feedex_gui_main.py:219
msgid "Add item ..."
msgstr ""

#: feedex_gui_main.py:227
msgid "Open a new tab for Searches..."
msgstr ""

#: feedex_gui_main.py:461
msgid "Number of reads if counted towards this entry keyword's weight when ranking incoming articles"
msgstr ""

#: feedex_gui_main.py:461
msgid "Read (+1)"
msgstr ""

#: feedex_gui_main.py:462
msgid "Unread document does not contriute to ranking rules"
msgstr ""

#: feedex_gui_main.py:462 feedex_gui_utils.py:428
msgid "Unread"
msgstr ""

#: feedex_gui_main.py:463
msgid "Mark this as unimportant and learn negative rules"
msgstr ""

#: feedex_gui_main.py:463
msgid "Unimportant"
msgstr ""

#: feedex_gui_main.py:465
msgid "Mark as..."
msgstr ""

#: feedex_gui_main.py:474
msgid "Remove Flags from Entry"
msgstr ""

#: feedex_gui_main.py:474
msgid "Unflag Entry"
msgstr ""

#: feedex_gui_main.py:476
msgid "Flag..."
msgstr ""

#: feedex_gui_main.py:482
msgid "Delete permanently"
msgstr ""

#: feedex_gui_main.py:483
msgid "Delete"
msgstr ""

#: feedex_gui_main.py:486
msgid "Last update"
msgstr ""

#: feedex_gui_main.py:488
msgid "Last Week"
msgstr ""

#: feedex_gui_main.py:489
msgid "Last Month"
msgstr ""

#: feedex_gui_main.py:490
msgid "Last Quarter"
msgstr ""

#: feedex_gui_main.py:491
msgid "Last Year"
msgstr ""

#: feedex_gui_main.py:492
msgid "Select Range..."
msgstr ""

#: feedex_gui_main.py:498
msgid "Find Entries similar to the one selected"
msgstr ""

#: feedex_gui_main.py:498
msgid "Find Similar Entries"
msgstr ""

#: feedex_gui_main.py:499
msgid "Search for this Entry's Keywords in time"
msgstr ""

#: feedex_gui_main.py:499
msgid "Show Time Relevance"
msgstr ""

#: feedex_gui_main.py:503
msgid "Articles"
msgstr ""

#: feedex_gui_main.py:503
msgid "Search for other documents by this Author"
msgstr ""

#: feedex_gui_main.py:504
msgid "Activity in Time"
msgstr ""

#: feedex_gui_main.py:504
msgid "Search for other documents by this Author in Time Series"
msgstr ""

#: feedex_gui_main.py:506
msgid "Search WWW for this Author's info"
msgstr ""

#: feedex_gui_main.py:506 feedex_gui_main.py:691
msgid "Search WWW"
msgstr ""

#: feedex_gui_main.py:508
msgid "Other by this Author..."
msgstr ""

#: feedex_gui_main.py:508
msgid "Search for this Author"
msgstr ""

#: feedex_gui_main.py:510
msgid "Search..."
msgstr ""

#: feedex_gui_main.py:514
msgid "Show Keywords for Entry"
msgstr ""

#: feedex_gui_main.py:515
msgid "Show Matched Rules for Entry"
msgstr ""

#: feedex_gui_main.py:516
msgid "Show all entry's technical data"
msgstr ""

#: feedex_gui_main.py:516 feedex_gui_main.py:517
msgid "Details..."
msgstr ""

#: feedex_gui_main.py:522 feedex_gui_main.py:571 feedex_gui_main.py:582
msgid "Save results from current tab"
msgstr ""

#: feedex_gui_main.py:522 feedex_gui_main.py:571 feedex_gui_main.py:582
msgid "Save results to CSV"
msgstr ""

#: feedex_gui_main.py:524
msgid "Export results from current tab"
msgstr ""

#: feedex_gui_main.py:524
msgid "Export results to JSON"
msgstr ""

#: feedex_gui_main.py:529 feedex_gui_main.py:558 feedex_gui_main.py:573
#: feedex_gui_main.py:584 feedex_gui_main.py:602 feedex_gui_main.py:1690
msgid "Clear Search History"
msgstr ""

#: feedex_gui_main.py:531 feedex_gui_main.py:663 feedex_gui_main.py:1680
msgid "Empty Trash"
msgstr ""

#: feedex_gui_main.py:533 feedex_gui_main.py:560 feedex_gui_main.py:575
#: feedex_gui_main.py:586 feedex_gui_main.py:603
msgid ""
"Save column layout and sizing for current tab.\n"
"It will be used as default in the future"
msgstr ""

#: feedex_gui_main.py:533 feedex_gui_main.py:560 feedex_gui_main.py:575
#: feedex_gui_main.py:586 feedex_gui_main.py:603
msgid "Save layout"
msgstr ""

#: feedex_gui_main.py:535 feedex_gui_main.py:588
msgid "Save current search filters as defaults for future"
msgstr ""

#: feedex_gui_main.py:535 feedex_gui_main.py:588
msgid "Save filters"
msgstr ""

#: feedex_gui_main.py:539
msgid "Expand all"
msgstr ""

#: feedex_gui_main.py:540
msgid "Collapse all"
msgstr ""

#: feedex_gui_main.py:550 feedex_gui_main.py:1787
msgid "Delete Rule"
msgstr ""

#: feedex_gui_main.py:552
msgid "Search for this Rule"
msgstr ""

#: feedex_gui_main.py:553 feedex_gui_main.py:566 feedex_gui_main.py:687
msgid "Show this Term's Contexts"
msgstr ""

#: feedex_gui_main.py:554 feedex_gui_main.py:567 feedex_gui_main.py:688
msgid "Show Terms related to this Term"
msgstr ""

#: feedex_gui_main.py:555 feedex_gui_main.py:568 feedex_gui_main.py:689
msgid "Show Time Series for this Term"
msgstr ""

#: feedex_gui_main.py:559
msgid "Display rules learned from User's habits along with weights"
msgstr ""

#: feedex_gui_main.py:559
msgid "Show Learned Rules"
msgstr ""

#: feedex_gui_main.py:565 feedex_gui_main.py:686
msgid "Search for this Term"
msgstr ""

#: feedex_gui_main.py:580
msgid "Search this Time Range"
msgstr ""

#: feedex_gui_main.py:593
msgid "Add Flag"
msgstr ""

#: feedex_gui_main.py:596 feedex_gui_main.py:1837
msgid "Delete Flag"
msgstr ""

#: feedex_gui_main.py:598
msgid "Search for this Flag"
msgstr ""

#: feedex_gui_main.py:599
msgid "Time Series search for this Flag"
msgstr ""

#: feedex_gui_main.py:610
msgid "Show articles for this Channel or Category sorted from newest"
msgstr ""

#: feedex_gui_main.py:610
msgid "Show from newest..."
msgstr ""

#: feedex_gui_main.py:611
msgid "Show articles sorted from newest in an extended view"
msgstr ""

#: feedex_gui_main.py:611
msgid "Show from newest (wide view)..."
msgstr ""

#: feedex_gui_main.py:615
msgid "Add Category"
msgstr ""

#: feedex_gui_main.py:621
msgid "Move Category..."
msgstr ""

#: feedex_gui_main.py:622
msgid "Move Feed..."
msgstr ""

#: feedex_gui_main.py:635
msgid "Restore..."
msgstr ""

#: feedex_gui_main.py:636
msgid "Remove Permanently"
msgstr ""

#: feedex_gui_main.py:641
msgid "Go to Channel's Homepage"
msgstr ""

#: feedex_gui_main.py:645
msgid "Fetch from selected Channel"
msgstr ""

#: feedex_gui_main.py:646
msgid "Update metadata for Channel"
msgstr ""

#: feedex_gui_main.py:647
msgid "Update metadata for All Channels"
msgstr ""

#: feedex_gui_main.py:650
msgid "Edit Channel"
msgstr ""

#: feedex_gui_main.py:651
msgid "Mark Channel as healthy"
msgstr ""

#: feedex_gui_main.py:651
msgid "This will nullify error count for this Channel so it will not be ommited on next fetching"
msgstr ""

#: feedex_gui_main.py:653
msgid "Remove Channel"
msgstr ""

#: feedex_gui_main.py:654
msgid "Show all technical information about this Channel"
msgstr ""

#: feedex_gui_main.py:654
msgid "Technical details..."
msgstr ""

#: feedex_gui_main.py:657
msgid "Edit Category"
msgstr ""

#: feedex_gui_main.py:658
msgid "Remove Category"
msgstr ""

#: feedex_gui_main.py:691
msgid "Search WWW for selected text"
msgstr ""

#: feedex_gui_main.py:693
msgid "Add as Rule"
msgstr ""

#: feedex_gui_main.py:1229 feedex_gui_utils.py:974
msgid "Image error: %a"
msgstr ""

#: feedex_gui_main.py:1275 feedex_gui_main.py:1284 feedex_gui_main.py:1293
msgid "Checking for news ..."
msgstr ""

#: feedex_gui_main.py:1302
msgid "Database is Locked for Fetching"
msgstr ""

#: feedex_gui_main.py:1303
msgid "Another instance may be fetching news right now. If not, proceed with operation. Proceed?"
msgstr ""

#: feedex_gui_main.py:1309
msgid "Database manually unlocked for fetching..."
msgstr ""

#: feedex_gui_main.py:1385
msgid "Updating channel..."
msgstr ""

#: feedex_gui_main.py:1395
msgid "Updating all channels..."
msgstr ""

#: feedex_gui_main.py:1453
msgid "Adding Channel..."
msgstr ""

#: feedex_gui_main.py:1491
msgid "Adding entry..."
msgstr ""

#: feedex_gui_main.py:1492
msgid "Openning entry ..."
msgstr ""

#: feedex_gui_main.py:1549
msgid "Delete Entry"
msgstr ""

#: feedex_gui_main.py:1551
msgid "Delete Entry permanently"
msgstr ""

#: feedex_gui_main.py:1567
msgid "Restore Entry"
msgstr ""

#: feedex_gui_main.py:1632
msgid "Delete Channel"
msgstr ""

#: feedex_gui_main.py:1635
msgid "Delete Channel permanently"
msgstr ""

#: feedex_gui_main.py:1638 feedex_gui_main.py:1641
msgid "Delete Category"
msgstr ""

#: feedex_gui_main.py:1661
msgid "Restore Category"
msgstr ""

#: feedex_gui_main.py:1663
msgid "Restore Channel"
msgstr ""

#: feedex_gui_main.py:1690
msgid "Are you sure you want to clear <b>Search History</b>?"
msgstr ""

#: feedex_gui_main.py:1750
msgid "Updating ..."
msgstr ""

#: feedex_gui_main.py:1894
msgid "Done..."
msgstr ""

#: feedex_gui_main.py:1905
msgid "Opening ..."
msgstr ""

#: feedex_gui_main.py:1938
msgid "Error saving configuration to %a"
msgstr ""

#: feedex_gui_main.py:1949
msgid "OK"
msgstr ""

#: feedex_gui_main.py:1949
msgid "Restart Required"
msgstr ""

#: feedex_gui_main.py:1949
msgid "Restart is required for all changes to be applied."
msgstr ""

#: feedex_gui_main.py:1952
msgid "Configuration saved successfully"
msgstr ""

#: feedex_gui_main.py:1998
msgid "Database Statistics"
msgstr ""

#: feedex_gui_main.py:2067
msgid "Dataset Empty"
msgstr ""

#: feedex_gui_main.py:2067
msgid "There are no learned rules to display"
msgstr ""

#: feedex_gui_main.py:2095
msgid "Nothing to show"
msgstr ""

#: feedex_gui_main.py:2130
msgid "Are you sure you want to DB maintenance? This may take a long time..."
msgstr ""

#: feedex_gui_main.py:2130
msgid "DB Maintenance"
msgstr ""

#: feedex_gui_main.py:2155
msgid "Clear Cache"
msgstr ""

#: feedex_gui_main.py:2155
msgid "Do you want to delete all downloaded and cached images/thumbnails?"
msgstr ""

#: feedex_gui_main.py:2159
msgid "Clearing cache ..."
msgstr ""

#: feedex_gui_main.py:2175
msgid "Save as.."
msgstr ""

#: feedex_gui_main.py:2178
msgid "Open file"
msgstr ""

#: feedex_gui_main.py:2235
msgid "New feed data has been imported. Download Metadata now?"
msgstr ""

#: feedex_gui_main.py:2235
msgid "Update Feed Data"
msgstr ""

#: feedex_gui_main.py:2274 feedex_gui_main.py:2293
msgid "Nothing to save..."
msgstr ""

#: feedex_gui_main.py:2321
msgid "Error saving to %a"
msgstr ""

#: feedex_gui_main.py:2323
msgid "Results saved to %a..."
msgstr ""

#: feedex_gui_tabs.py:83 feedex_gui_utils.py:522
msgid "News"
msgstr ""

#: feedex_gui_tabs.py:85
msgid "Search Contexts"
msgstr ""

#: feedex_gui_tabs.py:87
msgid "Search Terms"
msgstr ""

#: feedex_gui_tabs.py:89
msgid "Time Series"
msgstr ""

#: feedex_gui_tabs.py:95
msgid "Entry Relevance in Time"
msgstr ""

#: feedex_gui_tabs.py:99
msgid "* Search"
msgstr ""

#: feedex_gui_tabs.py:138
msgid "Clear search phrase"
msgstr ""

#: feedex_gui_tabs.py:150
msgid "Restore filters to defaults"
msgstr ""

#: feedex_gui_tabs.py:155
msgid "Select time series grouping"
msgstr ""

#: feedex_gui_tabs.py:159
msgid ""
"Select grouping field\n"
"<b>Note that grouping by similarity will be very time consuming for large date ranges</b>"
msgstr ""

#: feedex_gui_tabs.py:160
msgid "Select how many top results to show for each grouping"
msgstr ""

#: feedex_gui_tabs.py:161
msgid ""
"Default sorting field for empty queries\n"
"Use <b>Debubble</b> to show news with the least importance for each grouping"
msgstr ""

#: feedex_gui_tabs.py:171
msgid "Filter for Read/Unread news. Manually added entries are marked as read by default"
msgstr ""

#: feedex_gui_tabs.py:172
msgid "Filter by Flag or lack thereof"
msgstr ""

#: feedex_gui_tabs.py:174
msgid "Chose which item type to filter (Notes, News Items or both)"
msgstr ""

#: feedex_gui_tabs.py:175
msgid "Which handler protocols should be taken into account?"
msgstr ""

#: feedex_gui_tabs.py:181
msgid "-- No Field --"
msgstr ""

#: feedex_gui_tabs.py:181
msgid "Search in All or a specific field"
msgstr ""

#: feedex_gui_tabs.py:183
msgid "Detect case"
msgstr ""

#: feedex_gui_tabs.py:183
msgid "Set query case sensitivity"
msgstr ""

#: feedex_gui_tabs.py:186
msgid "Choose page length for query"
msgstr ""

#: feedex_gui_tabs.py:274 feedex_gui_tabs.py:327 feedex_gui_tabs.py:358
msgid "Date"
msgstr ""

#: feedex_gui_tabs.py:276 feedex_gui_tabs.py:277 feedex_gui_tabs.py:360
#: feedex_headers.py:360
msgid "Title"
msgstr ""

#: feedex_gui_tabs.py:279 feedex_gui_tabs.py:328 feedex_gui_tabs.py:359
msgid "Source"
msgstr ""

#: feedex_gui_tabs.py:280 feedex_gui_tabs.py:454 feedex_headers.py:361
msgid "Description"
msgstr ""

#: feedex_gui_tabs.py:281 feedex_headers.py:356
msgid "Author"
msgstr ""

#: feedex_gui_tabs.py:282 feedex_headers.py:357
msgid "Publisher"
msgstr ""

#: feedex_gui_tabs.py:284 feedex_gui_tabs.py:361 feedex_gui_tabs.py:432
msgid "Flag"
msgstr ""

#: feedex_gui_tabs.py:285 feedex_gui_tabs.py:362
msgid "Publ. Timestamp"
msgstr ""

#: feedex_gui_tabs.py:286
msgid "Added"
msgstr ""

#: feedex_gui_tabs.py:287 feedex_gui_tabs.py:363
msgid "Read?"
msgstr ""

#: feedex_gui_tabs.py:289 feedex_gui_tabs.py:330 feedex_gui_tabs.py:365
msgid "Importance"
msgstr ""

#: feedex_gui_tabs.py:291 feedex_gui_tabs.py:331 feedex_gui_tabs.py:367
msgid "Readability"
msgstr ""

#: feedex_gui_tabs.py:292 feedex_gui_tabs.py:332 feedex_gui_tabs.py:368
msgid "Word Count"
msgstr ""

#: feedex_gui_tabs.py:293 feedex_gui_tabs.py:329 feedex_gui_tabs.py:369
msgid "Link"
msgstr ""

#: feedex_gui_tabs.py:294 feedex_gui_tabs.py:334 feedex_gui_tabs.py:370
msgid "Term Count"
msgstr ""

#: feedex_gui_tabs.py:295 feedex_gui_tabs.py:371
msgid "Search Rank"
msgstr ""

#: feedex_gui_tabs.py:299
msgid ""
"Double-click to open in browser. \n"
"Right-click for more options\n"
"Hit <b>Ctrl-F</b> for interactive search by Title"
msgstr ""

#: feedex_gui_tabs.py:326
msgid "Entry"
msgstr ""

#: feedex_gui_tabs.py:333 feedex_gui_tabs.py:413
msgid "Rank"
msgstr ""

#: feedex_gui_tabs.py:338
msgid ""
"Double-click to edit. \n"
"Right-click for more options\n"
"Hit <b>Ctrl-F</b> for interactive search by Title"
msgstr ""

#: feedex_gui_tabs.py:357
msgid "Context"
msgstr ""

#: feedex_gui_tabs.py:374
msgid ""
"Search phrase in context is shown here.\n"
"Double-click to open the entry containing a context.\n"
"Right-click for more options\n"
"Hit <b>Ctrl-F</b> for interactive search by Title"
msgstr ""

#: feedex_gui_tabs.py:392
msgid "Term"
msgstr ""

#: feedex_gui_tabs.py:396
msgid "These are terms from read entries related to the one queries for. Hit <b>Ctrl-F</b> for interactive search"
msgstr ""

#: feedex_gui_tabs.py:411
msgid "Time"
msgstr ""

#: feedex_gui_tabs.py:427
msgid "Search String"
msgstr ""

#: feedex_gui_tabs.py:429
msgid "Case ins."
msgstr ""

#: feedex_gui_tabs.py:430
msgid "Type"
msgstr ""

#: feedex_gui_tabs.py:433
msgid "On Field"
msgstr ""

#: feedex_gui_tabs.py:434
msgid "On Feed/Category"
msgstr ""

#: feedex_gui_tabs.py:437
msgid ""
"These are manually added rules used for ranking and flagging. \n"
"Double-click to edit. \n"
"Right-click for more options\n"
"Hit <b>Ctrl-F</b> for interactive search"
msgstr ""

#: feedex_gui_tabs.py:452
msgid "Id"
msgstr ""

#: feedex_gui_tabs.py:457
msgid ""
"Flags used in rules and for manual marking of Entries\n"
"Right-click for more options"
msgstr ""

#: feedex_gui_tabs.py:537
msgid "Filters saved as defaults"
msgstr ""

#: feedex_gui_tabs.py:598
msgid ""
"Enter your search phrase here\n"
"Special tokens: AND, OR, NOT, (,), NEAR (for logical operations)\n"
"Proximity indicator: <b>~(number of words)</b>, e.g. test ~5 example\n"
"<b><i>Capitalized words are treated as exact/unstemmed</i></b>\n"
"Escape character: \\ \n"
"\n"
"Advanced wildcards:\n"
"    <b>&lt;DIV&gt;</b>      - divider (period, punctation etc.)\n"
"    <b>&lt;NUM&gt;</b>      - number\n"
"    <b>&lt;CAP&gt;</b>      - capitalized word\n"
"    <b>&lt;ALLCAP&gt;</b>   - word with all capitals\n"
"    <b>&lt;UNCOMM&gt;</b>   - uncommon word\n"
"    <b>&lt;POLYSYL&gt;</b>  - long word (3+ syllables)\n"
"    <b>&lt;CURR&gt;</b>     - currency symbol\n"
"    <b>&lt;MATH&gt;</b>     - math symbol\n"
"    <b>&lt;RNUM&gt;</b>     - Roman numeral\n"
"    <b>&lt;GREEK&gt;</b>    - Greek symbol\n"
"    <b>&lt;UNIT&gt;</b>     - unit marker/symbol\n"
"\n"
msgstr ""

#: feedex_gui_tabs.py:622
msgid ""
"Enter your search string here\n"
"Wildcard: <b>*</b>\n"
"Field beginning/end: <b>^,$</b>\n"
"Escape: \\ (only if before wildcards and field markers)"
msgstr ""

#: feedex_gui_tabs.py:838
msgid "Trash bin"
msgstr ""

#: feedex_gui_tabs.py:844 feedex_gui_tabs.py:847
msgid "New Entries"
msgstr ""

#: feedex_gui_tabs.py:856 feedex_gui_utils.py:353
msgid "Week"
msgstr ""

#: feedex_gui_tabs.py:859 feedex_gui_utils.py:354
msgid "Month"
msgstr ""

#: feedex_gui_tabs.py:862 feedex_gui_utils.py:355
msgid "Quarter"
msgstr ""

#: feedex_gui_tabs.py:865 feedex_gui_utils.py:356
msgid "Six Months"
msgstr ""

#: feedex_gui_tabs.py:868 feedex_gui_utils.py:357
msgid "Year"
msgstr ""

#: feedex_gui_tabs.py:875
msgid "Similar to ..."
msgstr ""

#: feedex_gui_tabs.py:958
msgid "Generating summary..."
msgstr ""

#: feedex_gui_tabs.py:959
msgid "Searching..."
msgstr ""

#: feedex_gui_tabs.py:1112
msgid "Filtering..."
msgstr ""

#: feedex_gui_utils.py:262
msgid "Search engine to use for browser searches. Use <b>Q%</b> symbol to substitute for query"
msgstr ""

#: feedex_gui_utils.py:279
msgid "Choose icon for this Channel. Leave empty to diplay downloaded logo, if present"
msgstr ""

#: feedex_gui_utils.py:297
msgid "Standard"
msgstr ""

#: feedex_gui_utils.py:298
msgid "Standard, preview on top"
msgstr ""

#: feedex_gui_utils.py:299
msgid "Vertical panes"
msgstr ""

#: feedex_gui_utils.py:306
msgid "Left to Right"
msgstr ""

#: feedex_gui_utils.py:307
msgid "Right to Left"
msgstr ""

#: feedex_gui_utils.py:314
msgid "System default"
msgstr ""

#: feedex_gui_utils.py:323
msgid "No startup page"
msgstr ""

#: feedex_gui_utils.py:324
msgid "Summary by Category"
msgstr ""

#: feedex_gui_utils.py:325
msgid "Summary by Channel"
msgstr ""

#: feedex_gui_utils.py:326
msgid "Summary by Flag"
msgstr ""

#: feedex_gui_utils.py:327
msgid "Restore previous session"
msgstr ""

#: feedex_gui_utils.py:337
msgid "Older than 3 months"
msgstr ""

#: feedex_gui_utils.py:338
msgid "Older than 6 months"
msgstr ""

#: feedex_gui_utils.py:339
msgid "Older than 1 year"
msgstr ""

#: feedex_gui_utils.py:340
msgid "Older than 2 years"
msgstr ""

#: feedex_gui_utils.py:341
msgid "Older than 3 years"
msgstr ""

#: feedex_gui_utils.py:350
msgid "Last Update"
msgstr ""

#: feedex_gui_utils.py:358
msgid "Choose dates..."
msgstr ""

#: feedex_gui_utils.py:370 feedex_gui_utils.py:386
msgid "Group Monthly"
msgstr ""

#: feedex_gui_utils.py:371 feedex_gui_utils.py:387
msgid "Group Daily"
msgstr ""

#: feedex_gui_utils.py:372 feedex_gui_utils.py:388
msgid "Group Hourly"
msgstr ""

#: feedex_gui_utils.py:379
msgid "Group by Category"
msgstr ""

#: feedex_gui_utils.py:380
msgid "Group by Channel"
msgstr ""

#: feedex_gui_utils.py:381
msgid "Group by Flag"
msgstr ""

#: feedex_gui_utils.py:385
msgid "Group by Similarity"
msgstr ""

#: feedex_gui_utils.py:391
msgid "No Grouping"
msgstr ""

#: feedex_gui_utils.py:395
msgid "Just number"
msgstr ""

#: feedex_gui_utils.py:402
msgid "Top 5"
msgstr ""

#: feedex_gui_utils.py:403
msgid "Top 10"
msgstr ""

#: feedex_gui_utils.py:404
msgid "Top 15"
msgstr ""

#: feedex_gui_utils.py:405
msgid "Top 20"
msgstr ""

#: feedex_gui_utils.py:406
msgid "Top 30"
msgstr ""

#: feedex_gui_utils.py:407
msgid "Top 50"
msgstr ""

#: feedex_gui_utils.py:408
msgid "All"
msgstr ""

#: feedex_gui_utils.py:415
msgid "Sort by Importance"
msgstr ""

#: feedex_gui_utils.py:416
msgid "Sort by Date"
msgstr ""

#: feedex_gui_utils.py:417
msgid "\"Debubble\""
msgstr ""

#: feedex_gui_utils.py:426
msgid "Read and Unread"
msgstr ""

#: feedex_gui_utils.py:427
msgid "Read"
msgstr ""

#: feedex_gui_utils.py:438
msgid "Flagged and Unflagged"
msgstr ""

#: feedex_gui_utils.py:439
msgid "Unflagged"
msgstr ""

#: feedex_gui_utils.py:440
msgid "All Flags"
msgstr ""

#: feedex_gui_utils.py:444
msgid "No Flag"
msgstr ""

#: feedex_gui_utils.py:453
msgid "Choose color for command line interface "
msgstr ""

#: feedex_gui_utils.py:463
msgid "-- No Category --"
msgstr ""

#: feedex_gui_utils.py:498
msgid ""
"Choose Channel's protocol handler:\n"
"<b>RSS</b> - use RSS protocol\n"
"<b>HTML</b> - download webpage and parse it with defined REGEX rules for each field\n"
"<b>Script</b> - fetched by User's script \n"
"<b>Local</b> - no downloads. Can be populated by scripts or command line\n"
"using <i>--add-entries</i>, <i>--add-entries-from-file</i>, <i>--add-entries-from-pipe</i> options\n"
msgstr ""

#: feedex_gui_utils.py:510
msgid "All handlers"
msgstr ""

#: feedex_gui_utils.py:520
msgid "Notes and News"
msgstr ""

#: feedex_gui_utils.py:521
msgid "Notes"
msgstr ""

#: feedex_gui_utils.py:526
msgid "Note"
msgstr ""

#: feedex_gui_utils.py:527
msgid "News Item"
msgstr ""

#: feedex_gui_utils.py:536
msgid "Chose Channel's authentication method"
msgstr ""

#: feedex_gui_utils.py:538
msgid "No Authentication"
msgstr ""

#: feedex_gui_utils.py:539
msgid "Detect Auth. Method"
msgstr ""

#: feedex_gui_utils.py:540
msgid "Digest"
msgstr ""

#: feedex_gui_utils.py:541
msgid "Basic"
msgstr ""

#: feedex_gui_utils.py:548
msgid "Chose default logic operation i.e. how whitespace should work"
msgstr ""

#: feedex_gui_utils.py:550
msgid "Any Term"
msgstr ""

#: feedex_gui_utils.py:551
msgid "All Terms"
msgstr ""

#: feedex_gui_utils.py:552
msgid "Terms near"
msgstr ""

#: feedex_gui_utils.py:553
msgid "Phrase"
msgstr ""

#: feedex_gui_utils.py:566
msgid "Full text matching"
msgstr ""

#: feedex_gui_utils.py:566 feedex_gui_utils.py:572
msgid "String matching"
msgstr ""

#: feedex_gui_utils.py:567
msgid ""
"Set query type to match this rule:\n"
"<b>String matching</b>: simple string comparison\n"
"<b>Full text matching</b>: stemmed and tokenized (no subqueries, logical markers, wildcards or nearness operators)\n"
"<b>REGEX</b>: REGEX matching"
msgstr ""

#: feedex_gui_utils.py:573
msgid ""
"Set query type:\n"
"<b>Full Text Search:</b> stemmed and tokenized (use capitalized terms for exact/unstemmed match)\n"
"<b>String matching</b>: simple string comparison"
msgstr ""

#: feedex_gui_utils.py:586
msgid "Select language used fort query tokenizing and stemming"
msgstr ""

#: feedex_gui_utils.py:588
msgid "All Languages"
msgstr ""

#: feedex_gui_utils.py:601
msgid "-- All --"
msgstr ""

#: feedex_gui_utils.py:618 feedex_gui_utils.py:627
msgid "500"
msgstr ""

#: feedex_gui_utils.py:619 feedex_gui_utils.py:628
msgid "1000"
msgstr ""

#: feedex_gui_utils.py:620 feedex_gui_utils.py:629
msgid "1500"
msgstr ""

#: feedex_gui_utils.py:621 feedex_gui_utils.py:630
msgid "2000"
msgstr ""

#: feedex_gui_utils.py:622 feedex_gui_utils.py:631
msgid "3000"
msgstr ""

#: feedex_gui_utils.py:623 feedex_gui_utils.py:632
msgid "5000"
msgstr ""

#: feedex_gui_utils.py:933 feedex_gui_utils.py:947
msgid "Resource too large! Schould be %a max"
msgstr ""

#: feedex_gui_utils.py:1073
msgid "Expanded feeds invalid. Defaulting ..."
msgstr ""

#: feedex_gui_utils.py:1080
msgid "Result column attributes invalid. Defaulting ..."
msgstr ""

#: feedex_gui_utils.py:1088
msgid "Contexts column attributes invalid. Defaulting ..."
msgstr ""

#: feedex_gui_utils.py:1095
msgid "Terms column attributes invalid. Defaulting ..."
msgstr ""

#: feedex_gui_utils.py:1102
msgid "Time series column attributes invalid. Defaulting ..."
msgstr ""

#: feedex_gui_utils.py:1109
msgid "Rules column attributes invalid. Defaulting ..."
msgstr ""

#: feedex_gui_utils.py:1116
msgid "Flags column attributes invalid. Defaulting ..."
msgstr ""

#: feedex_gui_utils.py:1123
msgid "Notes column attributes invalid. Defaulting ..."
msgstr ""

#: feedex_gui_utils.py:1132
msgid "Results column order invalid. Defaulting ..."
msgstr ""

#: feedex_gui_utils.py:1139
msgid "Contexts column order invalid. Defaulting ..."
msgstr ""

#: feedex_gui_utils.py:1146
msgid "Terms column order invalid. Defaulting ..."
msgstr ""

#: feedex_gui_utils.py:1153
msgid "Time series column order invalid. Defaulting ..."
msgstr ""

#: feedex_gui_utils.py:1160
msgid "Rules column order invalid. Defaulting ..."
msgstr ""

#: feedex_gui_utils.py:1167
msgid "Flags column order invalid. Defaulting ..."
msgstr ""

#: feedex_gui_utils.py:1174
msgid "Notes column order invalid. Defaulting ..."
msgstr ""

#: feedex_handlers.py:64
msgid "Invalid type of input feed! Should be a FeedContainer or dict!"
msgstr ""

#: feedex_handlers.py:84
msgid "Unrecognized authentication handler (%a). Must be \"digest\" or \"basic\""
msgstr ""

#: feedex_handlers.py:137
msgid "Could not read HTTP status"
msgstr ""

#: feedex_handlers.py:152
msgid "URL to resource empty!"
msgstr ""

#: feedex_handlers.py:201
msgid "Feed unchanged (304)"
msgstr ""

#: feedex_handlers.py:208
msgid "Feed unchanged (Published Date)"
msgstr ""

#: feedex_handlers.py:486 feedex_handlers.py:616
msgid "<ERROR>"
msgstr ""

#: feedex_handlers.py:570
msgid "Resource too big!"
msgstr ""

#: feedex_handlers.py:581
msgid "Downloaded resource could not be converted to text"
msgstr ""

#: feedex_handlers.py:641
msgid "No script file provided!"
msgstr ""

#: feedex_headers.py:68
msgid "Personal News and Notes organizer"
msgstr ""

#: feedex_headers.py:354
msgid "Feed ID"
msgstr ""

#: feedex_headers.py:358
msgid "Contributors"
msgstr ""

#: feedex_headers.py:362
msgid "Tags"
msgstr ""

#: feedex_headers.py:364
msgid "Text"
msgstr ""

#: feedex_headers.py:391
msgid "All Fields"
msgstr ""

#: feedex_headers.py:501
msgid "Log file"
msgstr ""

#: feedex_headers.py:502
msgid "Feedex database"
msgstr ""

#: feedex_headers.py:503
msgid "Browser command"
msgstr ""

#: feedex_headers.py:505
msgid "User Agent String"
msgstr ""

#: feedex_headers.py:506
msgid "Fallback User Agt."
msgstr ""

#: feedex_headers.py:507
msgid "Database timeout"
msgstr ""

#: feedex_headers.py:508
msgid "Default Channel check interval"
msgstr ""

#: feedex_headers.py:509
msgid "Channel error threshold"
msgstr ""

#: feedex_headers.py:510
msgid "Max items for a single transaction"
msgstr ""

#: feedex_headers.py:511
msgid "Ignore image processing"
msgstr ""

#: feedex_headers.py:512
msgid "Ignore handling media"
msgstr ""

#: feedex_headers.py:513
msgid "Limit for rules"
msgstr ""

#: feedex_headers.py:514
msgid "Use keyword learning"
msgstr ""

#: feedex_headers.py:515
msgid "Use search habits"
msgstr ""

#: feedex_headers.py:516
msgid "Do not save queries in History"
msgstr ""

#: feedex_headers.py:517
msgid "Learn from added Entries"
msgstr ""

#: feedex_headers.py:518
msgid "Default Entry weight"
msgstr ""

#: feedex_headers.py:519
msgid "Default Rule weight"
msgstr ""

#: feedex_headers.py:520
msgid "Default Rule wieght (query)"
msgstr ""

#: feedex_headers.py:521
msgid "Max similar items"
msgstr ""

#: feedex_headers.py:522
msgid "Default grouping depth"
msgstr ""

#: feedex_headers.py:523 feedex_headers.py:526
msgid "Do HTTP redirects"
msgstr ""

#: feedex_headers.py:524
msgid "Save permanent HTTP redirects"
msgstr ""

#: feedex_headers.py:525
msgid "Mark deleted RSS channels as unhealthy"
msgstr ""

#: feedex_headers.py:528
msgid "Ignore MODIFIED and ETag tags"
msgstr ""

#: feedex_headers.py:530
msgid "Push desktop notifications for new items"
msgstr ""

#: feedex_headers.py:531
msgid "Fetch news periodically"
msgstr ""

#: feedex_headers.py:532
msgid "Notification grouping"
msgstr ""

#: feedex_headers.py:533
msgid "Notification depth"
msgstr ""

#: feedex_headers.py:535
msgid "New item color"
msgstr ""

#: feedex_headers.py:536
msgid "Deleted item color"
msgstr ""

#: feedex_headers.py:537
msgid "Search hilight color"
msgstr ""

#: feedex_headers.py:538
msgid "Default Color for Flags"
msgstr ""

#: feedex_headers.py:540
msgid "GUI pane layout"
msgstr ""

#: feedex_headers.py:541
msgid "GUI pane orientation"
msgstr ""

#: feedex_headers.py:543
msgid "Phrases to exclude from window name"
msgstr ""

#: feedex_headers.py:545
msgid "Image viewer command"
msgstr ""

#: feedex_headers.py:546
msgid "Text File viewer command"
msgstr ""

#: feedex_headers.py:547
msgid "Search Engine to use in GUI"
msgstr ""

#: feedex_headers.py:548
msgid "Clear image cache after n days"
msgstr ""

#: feedex_headers.py:549
msgid "New Search shortkut key"
msgstr ""

#: feedex_headers.py:550
msgid "New Entry shortcut key"
msgstr ""

#: feedex_headers.py:551
msgid "New Rule shortcut key"
msgstr ""

#: feedex_headers.py:553
msgid "CLI normal color"
msgstr ""

#: feedex_headers.py:554
msgid "CLI default flagged color"
msgstr ""

#: feedex_headers.py:555
msgid "CLI read color"
msgstr ""

#: feedex_headers.py:556
msgid "CLI bold style"
msgstr ""

#: feedex_headers.py:557
msgid "Bold section beginning markup"
msgstr ""

#: feedex_headers.py:558
msgid "Bold section end markup"
msgstr ""

#: feedex_rule.py:61
msgid "Rule %a not found!"
msgstr ""

#: feedex_rule.py:95
msgid "Search string cannot be empty!"
msgstr ""

#: feedex_rule.py:100
msgid "Invalid query type! Must be string(0), full-text (1), or regex (2)"
msgstr ""

#: feedex_rule.py:145 feedex_rule.py:152
msgid "Field to search not valid!"
msgstr ""

#: feedex_rule.py:159
msgid "Not a valid regex string!"
msgstr ""

#: feedex_rule.py:162 feedex_rule.py:173
msgid "Case insensitivity must be 0 or 1!"
msgstr ""

#: feedex_rule.py:217
msgid "Rule %a updated successfuly!"
msgstr ""

#: feedex_rule.py:260
msgid "Rule %a deleted"
msgstr ""

#: feedex_rule.py:262 feedex_rule.py:531
msgid "Nothing done."
msgstr ""

#: feedex_rule.py:298
msgid "Rule %a added successfully"
msgstr ""

#: feedex_rule.py:421
msgid "Flag %a not found!"
msgstr ""

#: feedex_rule.py:435
msgid "ID taken by another flag"
msgstr ""

#: feedex_rule.py:436
msgid "Flag name cannot be empty!"
msgstr ""

#: feedex_rule.py:437
msgid "Invalid CLI color name!"
msgstr ""

#: feedex_rule.py:476
msgid "Error reloading flags after successfull update: %a"
msgstr ""

#: feedex_rule.py:483
msgid "Flag %a updated successfuly!"
msgstr ""

#: feedex_rule.py:526
msgid "Error reloading flags after successfull delete: %a"
msgstr ""

#: feedex_rule.py:529
msgid "Flag %a deleted"
msgstr ""

#: feedex_rule.py:560
msgid "Error reloading flags after successfull add: %a"
msgstr ""

#: feedex_rule.py:563
msgid "Flag %a added successfully"
msgstr ""

#: feedex_utils.py:72
msgid "Invalid epoch"
msgstr ""

#: feedex_utils.py:72 feedex_utils.py:79
msgid "Timestamp convertion: %a"
msgstr ""

#: feedex_utils.py:94
msgid "UNKNOWN"
msgstr ""

#: feedex_utils.py:129
msgid "Empty argument (%a)"
msgstr ""

#: feedex_utils.py:140
msgid "Invalid argument type (%a)"
msgstr ""

#: feedex_utils.py:165
msgid "Defaulting to %a"
msgstr ""

#: feedex_utils.py:283
msgid "%a must be integer > 0"
msgstr ""

#: feedex_utils.py:288
msgid "%a must be integer >= 0"
msgstr ""

#: feedex_utils.py:293
msgid "%a must be True or False"
msgstr ""

#: feedex_utils.py:298
msgid "%a must be a valid number"
msgstr ""

#: feedex_utils.py:303
msgid "%a must be a valid string"
msgstr ""

#: feedex_utils.py:308
msgid "%a must be a single character ([a-zA-Z0-9])"
msgstr ""

#: feedex_utils.py:318
msgid "Database directory %a does not exist!"
msgstr ""

#: feedex_utils.py:498
msgid "File %a not found!"
msgstr ""

#: feedex_utils.py:557
msgid "Cache cleared successfully..."
msgstr ""

